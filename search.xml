<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[数学建模《遗传性疾病和性状基因的定位分析建模》]]></title>
      <url>http://gaobb.github.io/2016/09/20/2016%E5%B9%B4%E5%85%A8%E5%9B%BD%E7%A0%94%E7%A9%B6%E7%94%9F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8E%A2%E7%B4%A2/</url>
      <content type="html"><![CDATA[<p><a href="http://gmcm.seu.edu.cn/" target="_blank" rel="external">第十三届全国研究生数学建模竞赛</a>于2016年9月16日上午8:00开始，2016年9月20日中午12:00结束，整个赛事持续100小时.这是一场数学应用能力的比拼，更是一场团队合作和身体体能的考验.期间很多小伙伴向我咨询一些问题，涉及到题目内容的理解，方法的选择，求解技巧等多个方面.为了促进大家的交流，下面简单谈谈我对B题的理解.<br><a id="more"></a> </p>
<p>申明：本人没有正式参加这次研赛，只是出于兴趣和交流的目的提供本文，以下做法仅仅代表我个人对本题目的理解.</p>
<h2 id="题目背景介绍"><a href="#题目背景介绍" class="headerlink" title="题目背景介绍"></a>题目背景介绍</h2><p>这道题目以遗传性疾病为背景，主要研究遗传性疾病和致病基因(位点)的关系，希望参赛人员根据已有数据找出导致疾病形成的主要位点(基因).从现实应用的角度来看，如果能定位与性状或疾病相关联的位点在染色体或基因中的位置，能帮助研究人员了解性状和一些疾病的遗传机理，也能使人们对致病位点加以干预，防止一些遗传病的发生. 竞赛的题目和原始数据请在单击<a href="../../../../attachment/2016_B.tar.gz">这儿</a>下载。</p>
<h2 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h2><p>请用适当的方法，把genotype.dat中每个位点的碱基(A,T,C,G) 编码方式转化成数值编码方式，便于进行数据分析.</p>
<p>DNA 序列, 由 C、T 、A 、G 四种碱基排列而成. 因此对 4种碱基进行数字编码,可用 0(00)、1(01)、2( 10) 和 3(11) 4 个数字对4种碱基进行编码. 这种编码格式共有 4!=24 种编码方式的组合. 4 个碱基中, C 与 G 互补, T与A互补, 因此,4 种碱基的数字编码, 应满足互补法则. 而4 个数字中 0(00) 与 3( 11) 互补, 1(01) 与 2(10). C、T 、A 、 G 4种碱基满足互补法则的数字编码格式共有 8 种，其余 16 种数字编码格式, 因不满足互补法则而被摒弃. 研究已经表明 C:0 T:1 A:2 G:3 这种按分子量大小顺序排列的编码格式最好. 因此在本实验中对碱基的编码采用这种方式.</p>
<p>因为染色体具有双螺旋结构，所以用两个碱基的组合表示一个位点的信息，这样四种碱基共有16组合方式<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section">  |  C  |  T  |  A  | G</span></div><div class="line">-------------------------</div><div class="line">C |  CC    CT    CA    CG  </div><div class="line">T |  TC    TT    TA    TG</div><div class="line">A |  AC    AT    AA    AG </div><div class="line">G |  GC    GT    GA    GG</div></pre></td></tr></table></figure></p>
<p>然后，我们首先按照上面的碱基编码原则，按照碱基对中碱基的顺序编码<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">     |   C   |   T   |   A  |  G</div><div class="line">     |   <span class="number">00</span>  |   <span class="number">01</span>  |  <span class="number">10</span>  |  <span class="number">11</span></div><div class="line">-----------------------------------</div><div class="line">C <span class="number">00</span> |  <span class="number">0000</span>   <span class="number">0001</span>    <span class="number">0010</span>    <span class="number">0011</span>  </div><div class="line">T <span class="number">01</span> |  <span class="number">0100</span>   <span class="number">0101</span>    <span class="number">0110</span>    <span class="number">0111</span></div><div class="line">A <span class="number">10</span> |  <span class="number">1000</span>   <span class="number">1001</span>    <span class="number">1010</span>    <span class="number">1011</span> </div><div class="line">G <span class="number">11</span> |  <span class="number">1100</span>   <span class="number">1101</span>    <span class="number">1110</span>    <span class="number">1111</span></div></pre></td></tr></table></figure></p>
<p>为了方便后面的计算，我们直接将上述二进制的碱基对直接编码为10进制，<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">   |   C   |   T   |   A  |  G</div><div class="line">-----------------------------------</div><div class="line">C  |   <span class="number">0</span>       <span class="number">1</span>      <span class="number">2</span>      <span class="number">3</span>  </div><div class="line">T  |   <span class="number">4</span>       <span class="number">5</span>      <span class="number">6</span>      <span class="number">7</span></div><div class="line">A  |   <span class="number">8</span>       <span class="number">9</span>     <span class="number">10</span>     <span class="number">11</span> </div><div class="line">G  |  <span class="number">12</span>      <span class="number">13</span>     <span class="number">14</span>     <span class="number">15</span></div></pre></td></tr></table></figure></p>
<p>这样便完成了碱基字符编码到数据编码的转换工作，下面是 matlab 实现.</p>
<p>首先把 genotype.dat 载入matlab 工作空间，并保存到 genotype 变量中，其size 为 1001×9445. 按照上面的编码规则，可以将其文本碱基对转化为数值，便于后续的数值分析.</p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">%% 载入原始数据</span></div><div class="line">filename = <span class="string">'../B_Data/genotype.dat'</span>; <span class="comment">%数据存放的路径</span></div><div class="line">m = <span class="number">1001</span>;</div><div class="line">n = <span class="number">9445</span>;</div><div class="line">genotype = textread(filename,<span class="string">'%s'</span>);</div><div class="line">genotype = <span class="built_in">reshape</span>(genotype,n,m);</div><div class="line">genotype = genotype';</div><div class="line"></div><div class="line"><span class="comment">%% 编码</span></div><div class="line">gene_data = <span class="built_in">zeros</span>(m,n);</div><div class="line"></div><div class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span>:m</div><div class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:n</div><div class="line">        <span class="keyword">switch</span> genotype&#123;i,j&#125;</div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'CC'</span>,<span class="string">'DD'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">0</span>;</div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'CT'</span>,<span class="string">'CI'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">1</span>;</div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'CA'</span>,<span class="string">'DA'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">2</span>;</div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'CG'</span>,<span class="string">'DG'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">3</span>;  </div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'TC'</span>,<span class="string">'ID'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">4</span>;</div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'TT'</span>,<span class="string">'II'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">5</span>;</div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'TA'</span>,<span class="string">'DA'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">6</span>;</div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'TG'</span>,<span class="string">'IG'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">7</span>;       </div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'AC'</span>,<span class="string">'AD'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">8</span>;</div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'AT'</span>,<span class="string">'AI'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">9</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'AA'</span></div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">10</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'AG'</span></div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">11</span>;     </div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'GC'</span>,<span class="string">'GD'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">12</span>;</div><div class="line">            <span class="keyword">case</span> &#123;<span class="string">'GT'</span>,<span class="string">'GI'</span>&#125;</div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">13</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'GA'</span></div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">14</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'GG'</span></div><div class="line">                gene_data(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="number">15</span>;        </div><div class="line">            <span class="keyword">otherwise</span></div><div class="line">                printf(<span class="string">'the pair of bases does not exist: %s'</span>,genotype&#123;i,j&#125;);</div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line">snp.data = gene_data;</div><div class="line">snp.name = genotype(<span class="number">1</span>,:);</div><div class="line"></div><div class="line"><span class="comment">%% 保存编码数据和位点名称</span></div><div class="line">save(<span class="string">'snp.mat'</span>,<span class="string">'-struct'</span>,<span class="string">'snp'</span>);</div></pre></td></tr></table></figure>
<h2 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h2><p>根据附录中1000个样本在某条有可能致病的染色体片段上的9445个位点的编码信息(见genotype.dat)和样本患有遗传疾病A的信息（见phenotype.txt文件）.设计或采用一个方法，找出某种疾病最有可能的一个或几个致病位点，并给出相关的理论依据.</p>
<h4 id="数据理解："><a href="#数据理解：" class="headerlink" title="数据理解："></a>数据理解：</h4><p>我们把这1000个样本，还有9445个位点的数据 (genotype.dat) 经过第一问的方案可以转化为一个 1000×9445 的矩阵，称做”特征”. 这里1000为数据样本，9445 为特征的维度. 另外这1000个样本的是否具有遗传病A 的信息保留在 (phenotype.txt)文件, 其中1 表示患有，0表示没有患该病. 这个1000x1 的向量我们叫做样本的“标记”.</p>
<h4 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a>问题分析：</h4><p>题目关键是让我们找出是哪些特征(也就是位点)导致了遗传疾病A？这个问题可以转化为：那些特征 (9445 个位点的部分)可以使得对遗传疾病A有较好的诊断率，那么这些位点肯定和遗传病A有密切关系. 因此这个问题转化为一个<strong>特征选择</strong>的问题，也就是找出一些特征，使得对遗传疾病A 的诊断有较高的识别率.</p>
<h4 id="方法方案："><a href="#方法方案：" class="headerlink" title="方法方案："></a>方法方案：</h4><p>涉及识别，也就是分类，SVM 是一种非常经典的统计学习方法，而线性模型的系数恰好可以度量每个特征对分类超平面的贡献.因此我们采用线性SVM，通过求解其系数来确定每个特征贡献.</p>
<h4 id="求解实现："><a href="#求解实现：" class="headerlink" title="求解实现："></a>求解实现：</h4><p><a href="http://www.csie.ntu.edu.tw/~cjlin/libsvm/" target="_blank" rel="external">LIBSVM</a> 和 <a href="http://www.csie.ntu.edu.tw/~cjlin/liblinear/" target="_blank" rel="external">LIBLINEAR</a> 是非常出名的SVM 求解软件包，它提供了非常丰富的外部接口(例如：matlab,python,java等). 相比于 LIBSVM, LIBLINEAR 主要是线性 SVM 模型，更擅长对高维度数据的求解，因此我们选择 LIBLINEAR 包.</p>
<h4 id="Matlab代码"><a href="#Matlab代码" class="headerlink" title="Matlab代码:"></a>Matlab代码:</h4><p>step1: 下载最新版的 <a href="http://www.csie.ntu.edu.tw/~cjlin/cgi-bin/liblinear.cgi?+http://www.csie.ntu.edu.tw/~cjlin/liblinear+tar.gz" target="_blank" rel="external">LIBLINEAR 源程序</a>，编译后加载到 matlab 搜索的路径<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">% add path</div><div class="line">addpath(genpath(<span class="string">'liblinear-2.1'</span>));</div><div class="line">% <span class="built_in">run</span>(<span class="string">'./liblinear-2.1/matlab/make.m'</span>)</div></pre></td></tr></table></figure></p>
<p>step2: 载入编码好的位点特征<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">% <span class="keyword">load</span> <span class="keyword">data</span></div><div class="line">label = textread(<span class="string">'../B_Data/phenotype.txt'</span>);</div><div class="line">snp = <span class="keyword">load</span>(<span class="string">'snp.mat'</span>);</div></pre></td></tr></table></figure></p>
<p>step3: 数据标准化<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">% <span class="class"><span class="keyword">data</span> standardization</span></div><div class="line"><span class="class"><span class="keyword">data</span> = snp.<span class="keyword">data</span>(2:<span class="title">end</span>,:);</span></div><div class="line"><span class="title">name</span> = snp.name;</div><div class="line">[m,n] = size(<span class="class"><span class="keyword">data</span>);</span></div><div class="line"></div><div class="line"><span class="title">mu</span> = mean(<span class="class"><span class="keyword">data</span>);</span></div><div class="line"><span class="title">st</span> = std(<span class="class"><span class="keyword">data</span>);</span></div><div class="line"></div><div class="line"><span class="title">sdata</span> = bsxfun(@minus,<span class="class"><span class="keyword">data</span>,mean(<span class="title">data</span>));</span></div><div class="line"><span class="title">sdata</span> = bsxfun(@times,sdata,<span class="number">1.</span>/st);</div></pre></td></tr></table></figure></p>
<p>step4: 训练线性SVM 模型<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">model = train(<span class="name">label+1</span>, sparse(<span class="name">sdata</span>), '-c <span class="number">1</span> -s <span class="number">0</span>')<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>step5: 模型权重的可视化<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">figure</div><div class="line">w = <span class="keyword">model</span>.w;</div><div class="line">plot(<span class="keyword">model</span>.w, <span class="string">':r.'</span>)</div><div class="line">ylabel(<span class="string">'w'</span>)</div><div class="line">axis([<span class="number">1</span>,n,<span class="number">-0.08</span>,<span class="number">0.1</span>]);</div></pre></td></tr></table></figure></p>
<p><img src="/image/2-1.png" alt=""></p>
<p>step5: 根据权重绝对值的大小排序，依据此排序选择特征，训练SVM，观察选择特征对其识别性能的影响<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[<span class="name">wv</span>, wi] = sort(<span class="name"><span class="builtin-name">abs</span></span>(<span class="name">model.w</span>), <span class="symbol">'descend</span>')<span class="comment">;</span></div><div class="line">%bar(<span class="name">wv</span>,<span class="symbol">'stacked</span>'), colormap(<span class="name">cool</span>)</div><div class="line">% 参数解释：-c <span class="number">1</span> 为模型的惩罚参数，-s <span class="number">0</span> 表示使用L2 正则化的逻辑回归loss, -v <span class="number">5</span> <span class="number">5</span>折交叉验证</div><div class="line"></div><div class="line">k = <span class="number">1</span><span class="comment">;</span></div><div class="line">for t = <span class="number">10</span>:10:n</div><div class="line">    cv_acc(<span class="name">k</span>) =  train(<span class="name">label</span>, sparse(<span class="name">sdata</span>(<span class="name">:</span>,wi(<span class="name">1:t</span>))), <span class="symbol">'-c</span> <span class="number">1</span> -s <span class="number">0</span> -v <span class="number">5</span>')<span class="comment">;</span></div><div class="line">    k = k+1<span class="comment">;</span></div><div class="line">end</div><div class="line"></div><div class="line">figure</div><div class="line">plot(<span class="name">cv_acc</span>,<span class="symbol">':g.</span>')<span class="comment">;</span></div><div class="line">axis([<span class="name">1</span> n/10 <span class="number">40</span> <span class="number">100</span>])</div><div class="line">grid on</div><div class="line">xlabel(<span class="symbol">'variables</span> numbers')<span class="comment">;</span></div><div class="line">ylabel(<span class="symbol">'5</span> fold cross validation accuracy %%')<span class="comment">;</span></div><div class="line">set(<span class="name">gca</span>,<span class="symbol">'XTick</span>',<span class="number">100</span>:100:900)</div><div class="line">set(<span class="name">gca</span>,<span class="symbol">'XTickLabel</span>',<span class="number">1000</span>:1000:9000)</div></pre></td></tr></table></figure></p>
<p><img src="/image/2-2.png" alt=""></p>
<p>step6: 模型评价，前2450个位点，5-fold 交叉验证识别准确率可以达到<strong>98.2%</strong><br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cv_acc =  train(<span class="name">label</span>, sparse(<span class="name">sdata</span>(:,wi(<span class="number">1</span>:<span class="number">2450</span>))), '-c <span class="number">1</span> -s <span class="number">0</span> -v <span class="number">5</span>')<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p><img src="/image/2-3.png" alt=""></p>
<p>step7: 输出Top20 的位点<br><figure class="highlight scilab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">fprintf</span>(<span class="string">'Top20 SNPs are: \n'</span>);</div><div class="line"><span class="keyword">for</span> t = <span class="number">1</span>:<span class="number">20</span></div><div class="line">    <span class="built_in">fprintf</span>(<span class="string">'top %2d: %10s \n'</span>, t, name&#123;<span class="number">1</span>,wi(t)&#125;);</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<h2 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h2><p>同上题中的样本患有遗传疾病A的信息（phenotype.txt文件）.现有300个基因，每个基因所包含的位点名称见文件夹gene_info中的300个dat文件，每个dat文件列出了对应基因所包含的位点(位点信息见文件genotype.dat).由于可以把基因理解为若干个位点组成的集合，遗传疾病与基因的关联性可以由基因中包含的位点的全集或其子集合表现出来请找出与疾病最有可能相关的一个或几个基因，并说明理由.</p>
<h2 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h2><p>在问题二中，已知9445个位点，其编码信息见genotype.dat文件.在实际的研究中，科研人员往往把相关的性状或疾病看成一个整体，然后来探寻与它们相关的位点或基因.试根据multi_phenos.txt文件给出的1000个样本的10个相关联性状的信息及其9445个位点的编码信息(见genotype.dat)，找出与multi_phenos.txt中10个性状有关联的位点.</p>
<p><img src="/image/4-1.png" alt=""><br><img src="/image/4-2.png" alt=""><br><img src="/image/4-3.png" alt=""></p>
<p>问题 3 和 问题 4 的方案和代码等我抽空在补充完整！</p>
<p><br></p>
<blockquote>
<p>最近访客</p>
<p><div class="ds-recent-visitors" data-num-items="28" data-avatar-size="42" id="ds-recent-visitors"></div><br><br></p>
</blockquote>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2016/09/20/2016年全国研究生数学建模竞赛B题的一些探索/">http://gaobb.github.io/2016/09/20/2016年全国研究生数学建模竞赛B题的一些探索/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[论文笔记 《Learning to segment with image-level annotations》]]></title>
      <url>http://gaobb.github.io/2016/07/21/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0HCP-SS/</url>
      <content type="html"><![CDATA[<p>这篇论文提出一种弱监督语义分割算法，仅仅使用图像类别水平的标注. </p>
<p><a href="">pdf</a><br><a id="more"></a> </p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2016/07/21/论文笔记HCP-SS/">http://gaobb.github.io/2016/07/21/论文笔记HCP-SS/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[论文笔记 《ScribbleSup Scribble-Supervised Convolutional Networks for Semantic Segmentation》]]></title>
      <url>http://gaobb.github.io/2016/07/21/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0ScribbleSup/</url>
      <content type="html"><![CDATA[<p>这篇论文提出一种弱监督语义分割算法，仅仅使用scribble 标注. 该算法首先使用图模型（GrubCut）从scibble传播信息到未标注的像素，然后可以使用全卷积神经网络(FCN)的框架进行像素级别的预测. 整个学习的过程在传播信息和训练FCN之间交替进行. 因此该算法可以简单地认为是 GrubCut 和 FCN 的结合.<br><a id="more"></a><br><a href="http://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Lin_ScribbleSup_Scribble-Supervised_Convolutional_CVPR_2016_paper.pdf" target="_blank" rel="external">PDF</a> <a href="http://research.microsoft.com/en-us/um/people/jifdai/downloads/scribble_sup/" target="_blank" rel="external">项目</a></p>
<h2 id="学习的整体框架"><a href="#学习的整体框架" class="headerlink" title="学习的整体框架"></a>学习的整体框架</h2><p><img src="/image/scribblesup.png" alt=""></p>
<h4 id="Scrrible-SUP-学习"><a href="#Scrrible-SUP-学习" class="headerlink" title="Scrrible-SUP 学习"></a>Scrrible-SUP 学习</h4><p>Task1: 该算法要从scibble传播信息到未标注的像素 方案：GrubCut</p>
<p>Task2: 该算法要学习一个卷积神经网络以便进行像素级别的预测 方案：FCN<br>目标函数：</p>
<p><img src="/image/scribble_fun.png" alt=""></p>
<p>该目标函数包含两部分，第一项是单个超像素的一元项，第二项是关于一对超像素的pairwise 项.</p>
<p>一元项包括两部分，第一部分基于 scribble 的信息，定义如下：</p>
<p><img src="/image/scribble_unary1.png" alt=""></p>
<p>第一个条件：如果一个超像素和scribble 重合，该超像素被赋予标记 c_k, cost 为0.<br>第二个条件：如果一个超像素和任意的scribble 没有重合，该像素被等可能的给予任何可能的标记.</p>
<p>第二部分是基于FCN 的网络输出，定义为 所有像素对数概率的和.<br><img src="/image/scribble_unary2.png" alt=""></p>
<p>Pairwise 项建模两个超像素的相似性. 相似性在本文中用颜色和文理的直方图来量化.<br><img src="/image/scribble_pairwise.png" alt=""><br>临近的超像素给予不同的标记，如果他们在颜色和纹理方面比较接近，则会有较高的 cost.</p>
<h5 id="交替优化"><a href="#交替优化" class="headerlink" title="交替优化"></a>交替优化</h5><p><img src="/image/scribble_opt.png" alt=""></p>
<h5 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h5><p>Strategies of utilizing scribbles<br>两阶段的方法： 基于Scribble 直接使用GrubCut, Lazysnapping 生成Masks, 然后使用 FCN 的框架训练.</p>
<p>本文方法（Mean IoU：63.1%）比两阶段的方法高 10%.</p>
<p>Sensitivities to scribble quality</p>
<p>使用不同长度的 scribble. 结果表明该方法对 scribble 的质量是十分稳健, 特别是当 scribble 缩小到一个点时，任然有 51.6% 的score.</p>
<p>Comparisons with other weakly-supervised methods</p>
<p>Comparisons with using masks</p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2016/07/21/论文笔记ScribbleSup/">http://gaobb.github.io/2016/07/21/论文笔记ScribbleSup/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 装机后必须要做的事情]]></title>
      <url>http://gaobb.github.io/2016/07/20/ubuntu%E8%A3%85%E6%9C%BA%E5%BF%85%E5%B9%B2%E7%9A%84%E4%BA%8B%E6%83%85/</url>
      <content type="html"><![CDATA[<p>安装完Ubuntu后，是不是有一点点小兴奋，马上就要使用这个与win截然不同的系统了，让我们看看，还要做点什么。<br><a id="more"></a> </p>
<h2 id="更新与升级"><a href="#更新与升级" class="headerlink" title="更新与升级"></a>更新与升级</h2><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> update &amp;&amp; sudo apt-<span class="built_in">get</span> <span class="built_in">dist</span>-upgrade</div></pre></td></tr></table></figure>
<h2 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h2><p><a href="http://pinyin.sogou.com/linux/help.php" target="_blank" rel="external">http://pinyin.sogou.com/linux/help.php</a><br>Ubuntu自带的输入法是ibus，使用起来并不是特别方便，大家可以使用搜狗输入法，来体验飞一般的输入速度。</p>
<h2 id="更新语言支持"><a href="#更新语言支持" class="headerlink" title="更新语言支持"></a>更新语言支持</h2><p>在一般情况下安装完成后，系统的语言支持并不是很完整，所以我们需要对语言支持进行更新。打开系统设置》语言支持，系统会自动更新语言信息，如果需要安装语言支持，则点击安装即可。</p>
<h2 id="安装flash插件以及额外的版权受限程序"><a href="#安装flash插件以及额外的版权受限程序" class="headerlink" title="安装flash插件以及额外的版权受限程序"></a>安装flash插件以及额外的版权受限程序</h2><p>flash插件是保证网页视频能正常播放的前提，所以大家需要安装它来正常浏览网页及观看视频，同时额外的版权受限程序包含了一些视频音频的解码器是在本地播放音频视频所必须的，flash插件及额外的版权受限程序都可以在Ubuntu软件中心安装，大家可以在Ubuntu软件中心进行安装。</p>
<h2 id="安装-vim"><a href="#安装-vim" class="headerlink" title="安装 vim"></a>安装 vim</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> insall <span class="keyword">vim</span></div></pre></td></tr></table></figure>
<h2 id="PDF-阅读器"><a href="#PDF-阅读器" class="headerlink" title="PDF 阅读器"></a>PDF 阅读器</h2><p>okular [ˈɔkjələ]   中文意思是 眼睛, 这个软件是一用就让你爱上他的那种<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="keyword">get</span> install okular</div></pre></td></tr></table></figure></p>
<h2 id="安装很多-LaTeX"><a href="#安装很多-LaTeX" class="headerlink" title="安装很多 LaTeX"></a>安装很多 LaTeX</h2><p>使用下面命令可以在 Ubuntu 上安装 Tex Live<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get <span class="keyword">install</span> texlive-<span class="keyword">full</span></div></pre></td></tr></table></figure></p>
<p>要编辑 LaTeX 文档需要一个编辑器，你可以找到很多编辑器，这里我们推荐 Texmaker<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="keyword">get</span> install texmaker</div></pre></td></tr></table></figure></p>
<p>在 Ubuntu 下执行下面命令可以打开 Texmaker 编辑器：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">texmaker</div></pre></td></tr></table></figure></p>
<p>现在让我们用 Texmaker 创建一个简单的文档，点击 File -&gt; New 然后在新文档中插入如下内容：<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">\<span class="name">documentclass</span><span class="string">&#123;article&#125;</span></span></div><div class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;document&#125;</span></span></div><div class="line">Hello oschina!</div><div class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;document&#125;</span></span></div></pre></td></tr></table></figure></p>
<h2 id="安装VNC"><a href="#安装VNC" class="headerlink" title="安装VNC"></a>安装VNC</h2><p>在 <a href="https://www.realvnc.com/download/vnc/" target="_blank" rel="external">https://www.realvnc.com/download/vnc/</a> 下载<br>解压 tar -xvf VNC-5.3.2-Linux-x64-DEB.tar.gz<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">dpkg</span> <span class="selector-tag">-i</span> <span class="selector-tag">VNC-Server-5</span><span class="selector-class">.3</span><span class="selector-class">.2-Linux-x64</span><span class="selector-class">.deb</span> <span class="selector-tag">VNC-Viewer-5</span><span class="selector-class">.3</span><span class="selector-class">.2-Linux-x64</span><span class="selector-class">.deb</span></div></pre></td></tr></table></figure></p>
<h2 id="安装配置git服务器"><a href="#安装配置git服务器" class="headerlink" title="安装配置git服务器"></a>安装配置git服务器</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="keyword">get</span> install git</div></pre></td></tr></table></figure>
<p><a href="http://yife.im/install-git-and-setting-in-ubuntu/" target="_blank" rel="external">http://yife.im/install-git-and-setting-in-ubuntu/</a></p>
<h2 id="HEXO-Github-搭建属于自己的博客"><a href="#HEXO-Github-搭建属于自己的博客" class="headerlink" title="HEXO+Github,搭建属于自己的博客"></a>HEXO+Github,搭建属于自己的博客</h2><p><a href="http://www.jianshu.com/p/465830080ea9" target="_blank" rel="external">http://www.jianshu.com/p/465830080ea9</a><br>ERROR Deployer not found: git<br><a href="https://github.com/hexojs/hexo/wiki/Migrating-from-2.x-to-3.0" target="_blank" rel="external">https://github.com/hexojs/hexo/wiki/Migrating-from-2.x-to-3.0</a></p>
<h2 id="安装-Chrome-浏览器"><a href="#安装-Chrome-浏览器" class="headerlink" title="安装 Chrome 浏览器"></a>安装 Chrome 浏览器</h2><p>下载 Chrome 浏览器, 系统会自动在 ubuntu 软件中心打开 Chrome 浏览器的安装包, 只需要点击安装就大公告成</p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2016/07/20/ubuntu装机必干的事情/">http://gaobb.github.io/2016/07/20/ubuntu装机必干的事情/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Reading Papers List]]></title>
      <url>http://gaobb.github.io/2016/06/04/ReadingPaperList/</url>
      <content type="html"><![CDATA[<p><a href="https://github.com/gaobb/Reading-papers" target="_blank" rel="external">Reading Papers List</a><br><a id="more"></a> </p>
<h2 id="Classification"><a href="#Classification" class="headerlink" title="Classification"></a>Classification</h2><h3 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h3><ul>
<li><a href="../../../../papers/Classification/very_deep/AlexNet.pdf">ImageNet Classification with Deep Convolutional Neural Networks</a>. (NIPS,2012).</li>
<li><a href="../../../../papers/Classification/very_deep/NIN.pdf">Natural Neural Networks</a>. (NIPS,2015).</li>
<li><a href="../../../../papers/Classification/very_deep/vgg.pdf">Very Deep Convolutional Networks for Large-Scale Image Recognition</a>. (ICLR,2015), <a href="http://www.robots.ox.ac.uk/~vgg/research/very_deep/" target="_blank" rel="external">project</a>.</li>
<li><a href="../../../../papers/Classification/very_deep/GoogLeNet.pdf">Going deeper with convolutions</a>. (CVPR,2015).</li>
<li><a href="../../../../papers/Classification/very_deep/BN-Inception.pdf">Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift</a>. (ICML,2015).</li>
<li><a href="../../../../papers/Classification/very_deep/Inception-v3.pdf">Rethinking the Inception Architecture for Computer Vision</a>. (CVPR,2016).</li>
<li><a href="../../../../papers/Classification/very_deep/ResNet.pdf">Deep Residual Learning for Image Recognition</a>. (CVPR,2016).</li>
</ul>
<h3 id="Optimization-Regularization"><a href="#Optimization-Regularization" class="headerlink" title="Optimization / Regularization"></a>Optimization / Regularization</h3><ul>
<li>Taking the human out of the loop: A review of bayesian optimization (2016), B. Shahriari et al. <a href="https://www.cs.ox.ac.uk/people/nando.defreitas/publications/BayesOptLoop.pdf" target="_blank" rel="external">[pdf]</a></li>
<li>Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift (2015), S. Loffe and C. Szegedy <a href="http://arxiv.org/pdf/1502.03167" target="_blank" rel="external">[pdf]</a> :sparkles:</li>
<li>Delving deep into rectifiers: Surpassing human-level performance on imagenet classification (2015), K. He et al. <a href="http://www.cv-foundation.org/openaccess/content_iccv_2015/papers/He_Delving_Deep_into_ICCV_2015_paper.pdf" target="_blank" rel="external">[pdf]</a> :sparkles:</li>
<li>Dropout: A simple way to prevent neural networks from overfitting (2014), N. Srivastava et al. <em>(Hinton)</em> <a href="http://jmlr.org/papers/volume15/srivastava14a/srivastava14a.pdf" target="_blank" rel="external">[pdf]</a> :sparkles:</li>
<li>Adam: A method for stochastic optimization (2014), D. Kingma and J. Ba <a href="http://arxiv.org/pdf/1412.6980" target="_blank" rel="external">[pdf]</a></li>
<li>Spatial pyramid pooling in deep convolutional networks for visual recognition (2014), K. He et al. <a href="http://arxiv.org/pdf/1406.4729" target="_blank" rel="external">[pdf]</a></li>
<li>Regularization of neural networks using dropconnect (2013), L. Wan et al. <em>(LeCun)</em> <a href="http://machinelearning.wustl.edu/mlpapers/paper_files/icml2013_wan13.pdf" target="_blank" rel="external">[pdf]</a></li>
<li>Improving neural networks by preventing co-adaptation of feature detectors (2012), G. Hinton et al. <a href="http://arxiv.org/pdf/1207.0580.pdf" target="_blank" rel="external">[pdf]</a> :sparkles:</li>
<li>Random search for hyper-parameter optimization (2012) J. Bergstra and Y. Bengio <a href="http://www.jmlr.org/papers/volume13/bergstra12a/bergstra12a" target="_blank" rel="external">[pdf]</a></li>
</ul>
<h3 id="Multi-label"><a href="#Multi-label" class="headerlink" title="Multi-label"></a>Multi-label</h3><ul>
<li><a href="../../../../papers/Classification/Multi-label/HCP.pdf">CNN: Single-label to Multi-label</a>.</li>
</ul>
<h2 id="Detection"><a href="#Detection" class="headerlink" title="Detection"></a>Detection</h2><ul>
<li><a href="../../../../papers/Detection/R-FCN.pdf.pdf">R-FCN</a>. (NIPS,2016).</li>
<li><a href="../../../../papers/Detection/FasterR-CNN.pdf.pdf">Faster R-CNN</a>. (NIPS,2015).</li>
<li><a href="../../../../papers/Detection/FastR-CNN.pdf.pdf">Fast R-CNN</a>. (ICCV,2015).</li>
<li><a href="../../../../papers/Detection/R-CNN.pdf.pdf">R-CNN</a>. (CVPR,2014).</li>
</ul>
<h2 id="Segmentation"><a href="#Segmentation" class="headerlink" title="Segmentation"></a>Segmentation</h2><h3 id="Supervised"><a href="#Supervised" class="headerlink" title="Supervised"></a>Supervised</h3><ul>
<li><a href="../../../../papers/Segmentation/Supervised/DeconvNet.pdf">Learning Deconvolution Network for Semantic Segmentation</a>. (ICCV,2015), <a href="http://cvlab.postech.ac.kr/research/deconvnet/" target="_blank" rel="external">project</a>,  <a href="http://cvlab.postech.ac.kr/~hyeonwoonoh/" target="_blank" rel="external">homepage</a>.</li>
<li><a href="../../../../papers/Supervised/Segmentation/FCN.pdf">Fully Convolutional Networks for Semantic Segmentation</a>. (CVPR best paper honorable mention,2015), <a href="https://github.com/shelhamer/fcn.berkeleyvision.org" target="_blank" rel="external">Caffe_code</a>, <a href="http://people.eecs.berkeley.edu/~jonlong/" target="_blank" rel="external">homepage</a>.</li>
</ul>
<h3 id="Weakly-supervised"><a href="#Weakly-supervised" class="headerlink" title="Weakly-supervised"></a>Weakly-supervised</h3><ul>
<li><a href="../../../../papers/Segmentation/Weakly-supervised/BoxSup.pdf">BoxSup: Exploiting Bounding Boxes to Supervise Convolutional Networks for Semantic Segmentation</a>. (ICCV,2015).</li>
<li><a href="../../../../papers/Segmentation/Weakly-supervised/ScribbleSup.pdf">ScribbleSup: Scribble-Supervised Convolutional Networks for Semantic Segmentation</a>. (CVPR,2016).</li>
<li><a href="http://arxiv.org/pdf/1502.02734v3.pdf" target="_blank" rel="external">Weakly- and Semi-Supervised Learning of a Deep Convolutional Network for Semantic Image Segmentation</a>. (ICCV,2015)</li>
<li><a href="../../../../papers/Segmentation/Weakly-supervised/good_image_segment.pdf">What is a Good Image Segment? A Unified Approach to Segment Extraction</a>. (ECCV,2008), <a href="http://www.wisdom.weizmann.ac.il/~vision/GoodSegment.html" target="_blank" rel="external">project</a>, <a href="http://www.wisdom.weizmann.ac.il/~bagon/" target="_blank" rel="external">homepage</a>.</li>
</ul>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2016/06/04/ReadingPaperList/">http://gaobb.github.io/2016/06/04/ReadingPaperList/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Caffe 安装常见问题]]></title>
      <url>http://gaobb.github.io/2016/02/24/Caffe%20%E5%AE%89%E8%A3%85%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>Caffe 安装常见问题<br><a id="more"></a><br>After ‘make all’, you may face two errors. Here are the solutions:</p>
<p>Error One:</p>
<p>./include/caffe/common.hpp:5:27: fatal error: gflags/gflags.h: No such file or directory<br>compilation terminated.<br>Solutions:</p>
<p>wget <a href="https://github.com/schuhschuh/gflags/archive/master.zip" target="_blank" rel="external">https://github.com/schuhschuh/gflags/archive/master.zip</a><br>unzip master.zip<br>cd gflags-master<br>mkdir build &amp;&amp; cd build<br>export CXXFLAGS=”-fPIC” &amp;&amp; cmake .. &amp;&amp; make VERBOSE=1<br>make<br>sudo make install<br>Error Two:</p>
<p>./include/caffe/data_layers.hpp:11:18: fatal error: lmdb.h: No such file or directory<br>Solution:</p>
<p>git clone git://gitorious.org/mdb/mdb.git<br>cd mdb/libraries/liblmdb<br>make<br>sudo make install<br>After the installation of caffe, you could build the python interfance for it:</p>
<p>sudo ln -s /usr/include/python2.7/ /usr/local/include/python2.7<br>sudo ln -s /usr/local/lib/python2.7/dist-packages/numpy-1.8.1-py2.7-linux-x86_64.egg/numpy/core/include/numpy /usr/local/include/python2.7/numpy<br>make pycaffe<br>echo ‘export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/lib’ &gt;&gt; ~/.bashrc<br>source ~/.bashrc<br>sudo easy_install pillow<br>If when you run ‘make pycaffe’, you see this error</p>
<p>UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe2 in position 54: ordinal not in range(128)<br>you could fix it by running:</p>
<p>sudo apt-get install libevent-dev python-dev<br>That should be the end of the installation. You can test that it runs with:</p>
<p>python python/classify.py –print_results examples/images/cat.jpg foo<br>The expected output is:</p>
<p>[(‘kit fox’, ‘0.27327’), (‘red fox’, ‘0.20591’), (‘wood rabbit’, ‘0.12281’), (‘Egyptian </p>
<ol>
<li>安装配置nVidia cuDNN 加速Caffe模型运算<br>a. 安装cuDNN<br>该改版本caffe-master默认支持cudnn-6.5-linux-x64-v2，使用cudnn-6.5-linux-R1会报错，安装前请去先官网下载最新的cuDNN。<br>$ sudo cp cudnn.h /usr/local/include<br>$ sudo cp libcudnn.so /usr/local/lib<br>$ sudo cp libcudnn.so.6.5 /usr/local/lib<br>$ sudo cp libcudnn.so.6.5.48 /usr/local/lib<br>b. 链接cuDNN的库文件<br>$ sudo ln -sf /usr/local/lib/libcudnn.so.6.5.48 /usr/local/lib/libcudnn.so.6.5<br>$ sudo ln -sf /usr/local/lib/libcudnn.so.6.5 /usr/local/lib/libcudnn.so<br>$ sudo ldconfig -v</li>
</ol>
<p>opencv</p>
<p>Unsupported gpu architecture ‘compute_11’</p>
<p>cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D CUDA_GENERATION=Kepler ..</p>
<p>cmake需要指定GPU架构3 ：-D CUDA_GENERATION=Kepler，否则报错：Unsupported gpu architecture ‘compute_11’<br>生成lib/libopencv_highgui.so.2.4.9找不到png_set_longjmp_fn，可以这样解决：</p>
<p>google之后发现这个函数定义在libpng中<br>查看libopencv_highgui.so.2.4.9引用了哪个libpng<br>$ ldd lib/libopencv_highgui.so.2.4.9 | grep libpng<br>查看该lipng中是否定义了png_set_longjmp_fn，注意根据自己的环境替换掉/usr/lib64/libpng12.so.0.49.0<br>$ readelf -s /usr/lib64/libpng12.so.0.49.0 | grep png_set_longjmp_fn<br>没有任何输出，说明没有定义，则需要安装更新的版本<br>$ wget <a href="http://github.com/glennrp/libpng-releases/raw/master/libpng-1.5.23.tar.xz" target="_blank" rel="external">http://github.com/glennrp/libpng-releases/raw/master/libpng-1.5.23.tar.xz</a><br>$ tar -xvf libpng-1.5.23.tar.xz<br>$ cd libpng-1.5.23<br>$ make install<br>安装后发现仍然找不到，这是因为链接时查找路径的问题4:</p>
<p>$ cd /usr/local/lib<br>$ cp -d libpng15.a libpng15.la libpng15.so<em> libpng.a libpng.</em> /usr/lib64</p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2016/02/24/Caffe">http://gaobb.github.io/2016/02/24/Caffe</a> 安装常见问题/</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux命令行备份数据到GoogleDrive神器之Grive]]></title>
      <url>http://gaobb.github.io/2016/02/22/linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%88%B0GoogleDrive%E7%A5%9E%E5%99%A8%E4%B9%8BGrive/</url>
      <content type="html"><![CDATA[<p>几天前用亚马逊提供的 AWS 计算服务器下载了一些数据，可是如何下载到本地？<br><a id="more"></a><br>Google 雲端硬碟是 Google 所提供的線上雲端儲存服務，除了可以儲存各種檔案之外，也支援檔案的同步、分享與協同編輯等功能，而目前 Google 雲端硬碟已經支援 Windows、Mac OS X、Android 與 iOS 這些平台，但是 Linux 卻尚未有官方的正式支援，因此在 Linux 平台上若想要使用 Google 雲端硬碟只能使用網頁來存取，或是使用第三方所開發的軟體。</p>
<p>Grive 是一個開放原始碼的非官方 Google 雲端硬碟 Linux client，它是一個指令模式的工具，可讓 Linux 本機的資料夾與 Google 雲端硬碟同步，只要啟動這個 Grive  之後，它就會自動把本機的檔案變動同步到 Google 雲端硬碟上，反之亦然。</p>
<p>安裝 Grive</p>
<p>在 Ubuntu Linux 中，若要安裝 Grive，使用 apt 安裝，首先加入這個 PPA：<br>sudo add-apt-repository ppa:nilarimogard/webupd8</p>
<p>然後再安裝 grive 套件：<br>sudo apt-get update<br>sudo apt-get install grive</p>
<p>如果不想使用第三方的 PPA，要從原始碼編譯安裝也可以，首先安裝一些必要套件：<br>sudo apt-get install cmake build-essential libgcrypt11-dev libjson0-dev libcurl4-openssl-dev libexpat1-dev libboost-filesystem-dev libboost-program-options-dev binutils-dev</p>
<p>再從 Grive 的網站下載原始碼，或直接使用 wget 下載：<br>wget <a href="http://www.lbreda.com/grive/_media/packages/0.2.0/grive-0.2.0.tar.gz" target="_blank" rel="external">http://www.lbreda.com/grive/_media/packages/0.2.0/grive-0.2.0.tar.gz</a></p>
<p>解壓縮之後再編譯並安裝：<br>tar xvfvz grive-0.2.0.tar.gz<br>cd grive-0.2.0<br>cmake .<br>make<br>sudo make install</p>
<p>安裝完成之後，第一次執行前，要先建立一個本機的資料夾，然後再使用 grive 指令配合 -a 參數跟 Google 雲端硬碟設定同步：<br>mkdir ~/google_drive<br>cd ~/google_drive<br>grive -a</p>
<p>執行之後，會出現一個 URL 網址，這是為了取得 Google 應用程式的權限用的，以瀏覽器打開這個網址之後，登入 Google 的帳號，就可以看到這樣畫面：</p>
<p>Google 應用程式要求權限</p>
<p>點擊「接受」後，就會出現一個授權碼：</p>
<p>Google 應用程式授權碼</p>
<p>把這個授權碼複製下來，貼在剛剛 Grive 要求輸入授權碼（authentication code）的地方：</p>
<p>Grive 要求輸入 Google 授權碼</p>
<p>貼上授權碼之後，再按下 Enter 鍵，這時候 Grive 就會把所有 Google 雲端硬碟上的資料同步到這個資料夾中：</p>
<p>Grive 同步</p>
<p>使用 Grive 進行同步</p>
<p>之後如果在本機的 ~/google_drive 目錄或是 Google 雲端硬碟有新增、修改或刪除的檔案時，你可以在這個目錄中執行 grive 指令，這樣 Grive 就會自動將本機與 Google 雲端硬碟檔案作比對，自動下載或上傳，讓兩邊的檔案同步，例如若在本機新增一個 new_file 檔案：<br>cd ~/google_drive<br>touch new_file</p>
<p>如果要進同步，就執行：<br>grive</p>
<p>輸出為<br>Reading local directories<br>Synchronizing folders<br>Reading remote server file list<br>Detecting changes from last sync<br>Synchronizing files<br>sync “./new_file” doesn’t exist in server, uploading<br>Finished!<br>這裡 Grive 發現 ./new_file 這個檔案沒有在 Google 雲端硬碟上，就會自動上傳。當然如果 Grive 發現 Google 雲端硬碟上有新檔案時，它也會幫你自動下載。</p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2016/02/22/linux命令行备份数据到GoogleDrive神器之Grive/">http://gaobb.github.io/2016/02/22/linux命令行备份数据到GoogleDrive神器之Grive/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[年龄估计]]></title>
      <url>http://gaobb.github.io/2015/09/10/%E5%B9%B4%E9%BE%84%E4%BC%B0%E8%AE%A1/</url>
      <content type="html"><![CDATA[<p>ＣonvNet年龄估计技术总结．人脸含有非常重要的个人信息，无论我们随身携带的各种证件，还是电子档案，都有一个非常重要的位置用于放置脸部照片．人脸识别(身份验证，表情，种族，性别，年龄）是人脸研究核心课题，人脸检测, 人脸关键点对准是做好人脸识别的基础．由于人脸识别广阔的应用前景，国内关于人脸识别的公司陆续上市，例如 <a href="http://www.linkface.cn/" target="_blank" rel="external">LinkFace </a>， <a href="http://www.faceplusplus.com.cn/" target="_blank" rel="external">Face++</a>．本文主要总结最近的一个工作（年龄估计）．<br><a id="more"></a> </p>
<h2 id="人脸检测-Face-detection"><a href="#人脸检测-Face-detection" class="headerlink" title="人脸检测(Face detection)"></a>人脸检测(Face detection)</h2><p>脸部含有人类年龄最重要的信息，因此做年龄估计的第一步就是如何准确Crop　出一张脸，通常称作人脸检测．伴随深度学习等技术的迅速发展，人脸检测的准确度有了很大提高．很多相关的成果在最近几年的顶级会议或者期刊发表．其中<a href="http://markusmathias.bitbucket.org/2014_eccv_face_detection/" target="_blank" rel="external">DPM,ECCV2014</a> 是一个非常成功的方法．<br><img src="/image/oscar.medium.png" alt="DPM"></p>
<h2 id="关键点检测-Key-points-与人脸矫正-Face-alignment"><a href="#关键点检测-Key-points-与人脸矫正-Face-alignment" class="headerlink" title="关键点检测(Key points)　与人脸矫正(Face alignment)"></a>关键点检测(Key points)　与人脸矫正(Face alignment)</h2><p>在一张人脸图像上，关键点主要是以下５个位置：一双眼睛，鼻尖，嘴巴的两角．如果能够准确的预测这５个位置，那么对于人脸识别的相关任务意义不言而喻．但是在实际应用中人脸图像由于受到姿态，表情，灯光，遮挡等复杂因素的影响，对于解决这个问题带来严重的挑战．为了解决这个问题，各种模型以及算法被提出． 香港中文大学　<a href="http://www.ie.cuhk.edu.hk/people/xotang.shtml" target="_blank" rel="external">Prof. Xiaoou Tang</a> 带领的 <a href="http://mmlab.ie.cuhk.edu.hk/" target="_blank" rel="external">Multimedia Laboratory</a> 在解决这个问题取得重大成功，他们的<a href="http://mmlab.ie.cuhk.edu.hk/archive/CNN_FacePoint.htm" target="_blank" rel="external">工作</a> 发表在 CVPR2013. 只要提取到关键点，对齐将是一件比较容易的事情，常用的方法比如模板匹配．<br><img src="/image/keypoints.png" alt=""></p>
<p><img src="/image/pre_pro-c.jpg" alt=""></p>
<h2 id="训练CNN-Training-CNN"><a href="#训练CNN-Training-CNN" class="headerlink" title="训练CNN(Training CNN)"></a>训练CNN(Training CNN)</h2><p><img src="/image/dldl-c.jpg" alt=""><br>最终目的是要根据人脸面部的表征预测年龄．有了前面的准备工作，可能很多人会想，只要把这些数据塞到一个深度卷积网络（ＣonvNet）训练不就好了吗？遗憾的是要成功的训练一个ＣonvNet　并非易事．因为ＣonvNet能够取得成功一个重要因素就是大量的训练样本．但是目前公开的相关的年龄的数据集训练样本相当有限，例如 Morph 作为最大的数据集也仅仅只有５万多张．因此训练样本成为使用ＣonvNet　模型估计年龄的瓶颈．我们的工作正是为了解决这一问题．<br>……</p>
<h2 id="估计年龄-Age-estimation"><a href="#估计年龄-Age-estimation" class="headerlink" title="估计年龄(Age estimation)"></a>估计年龄(Age estimation)</h2><p>这里提供一个演示．使用我们的方法在一些测试数据年龄的预测结果．</p>
<p><img src="/image/4s-c.jpg" alt=""><br><img src="/image/8s-c.jpg" alt=""><br><img src="/image/9-c.png" alt=""><br><img src="/image/pre_age.gif" alt=""></p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/09/10/年龄估计/">http://gaobb.github.io/2015/09/10/年龄估计/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[模糊孪生支持向量机]]></title>
      <url>http://gaobb.github.io/2015/08/05/%E6%A8%A1%E7%B3%8A%E5%AD%AA%E7%94%9F%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/</url>
      <content type="html"><![CDATA[<p>孪生支持向量机的一个变种——模糊孪生支持向量机. 该工具箱的功能当前主要用于解决含有异常样本的分类问题. 下载链接 <a href="https://github.com/gaobb/CDFTSVM" target="_blank" rel="external">CDFTSVM Toolbox</a>.</p>
<a id="more"></a> 
<h2 id="CDFTSVM-has-two-distinguished-advantages"><a href="#CDFTSVM-has-two-distinguished-advantages" class="headerlink" title="CDFTSVM has two distinguished advantages"></a>CDFTSVM has two distinguished advantages</h2><p>(1) An effectivefuzzy membership function is produced for removing the noiseincurred by the contaminant inputs. </p>
<p>(2) A coordinate descent strategy with shrinking by active set is used to deal with the computational complexity brought by the high dimensional input.</p>
<h2 id="CDFTSVM-demo-shows"><a href="#CDFTSVM-demo-shows" class="headerlink" title="CDFTSVM demo shows"></a>CDFTSVM demo shows</h2><p><img src="../../../../image/demo_01.png" alt="CDFTSVM"></p>
<p><img src="../../../../image/demo_02.png" alt="CDFTSVM"></p>
<p><img src="../../../../image/demo_03.png" alt="CDFTSVM"></p>
<p><img src="../../../../image/demo_04.png" alt="CDFTSVM"></p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/08/05/模糊孪生支持向量机/">http://gaobb.github.io/2015/08/05/模糊孪生支持向量机/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[论文笔记Very deep convolutional neural network for large scale image recognition]]></title>
      <url>http://gaobb.github.io/2015/06/19/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0VGG/</url>
      <content type="html"><![CDATA[<p>这篇论文主要在CNN的深度上做了一个探索，结论是一个较深的网络架构，确实可以学到更加general and discriminative feature.<br><a id="more"></a> </p>
<h2 id="分类框架"><a href="#分类框架" class="headerlink" title="分类框架"></a>分类框架</h2><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><p>以 multinomial logistic regression 作为目标函数在每个 mini-batch 上采用 SGD 算法优化.</p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/19/论文笔记VGG/">http://gaobb.github.io/2015/06/19/论文笔记VGG/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Matlab 常见问题整理]]></title>
      <url>http://gaobb.github.io/2015/06/17/Matlab-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<p>本文总结一些在Linux 环境（ubuntu15.04 and redhat 6.5）下使用MATLAB常见的一些问题以及解决方案.<br><a id="more"></a> </p>
<h2 id="使用Matlab-在没有安装excel的linux-Mac以及win-系统环境上写数据到excel"><a href="#使用Matlab-在没有安装excel的linux-Mac以及win-系统环境上写数据到excel" class="headerlink" title="使用Matlab 在没有安装excel的linux,Mac以及win 系统环境上写数据到excel."></a>使用Matlab 在没有安装excel的linux,Mac以及win 系统环境上写数据到excel.</h2><p>xlwrite: Generate XLS(X) files without Excel on Mac/Linux/Win.<br>解决方法来自：<br><a href="http://www.mathworks.com/matlabcentral/fileexchange/38591-xlwrite--generate-xls-x--files-without-excel-on-mac-linux-win" target="_blank" rel="external">http://www.mathworks.com/matlabcentral/fileexchange/38591-xlwrite--generate-xls-x--files-without-excel-on-mac-linux-win</a></p>
<p>具体例子如下：<br>% Small demonstration on how to use XLWRITE<br>% Initialisation of POI Libs<br>% Add Java POI Libs to matlab javapath<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">javaaddpath('poi_library/poi-3.<span class="number">8</span><span class="number">-20120326</span>.jar')<span class="comment">;</span></div><div class="line">javaaddpath('poi_library/poi-ooxml-3.<span class="number">8</span><span class="number">-20120326</span>.jar')<span class="comment">;</span></div><div class="line">javaaddpath('poi_library/poi-ooxml-schemas-3.<span class="number">8</span><span class="number">-20120326</span>.jar')<span class="comment">;</span></div><div class="line">javaaddpath('poi_library/xmlbeans-2.<span class="number">3.0</span>.jar')<span class="comment">;</span></div><div class="line">javaaddpath('poi_library/dom4j-1.<span class="number">6.1</span>.jar')<span class="comment">;</span></div><div class="line">javaaddpath('poi_library/stax-api-1.<span class="number">0.1</span>.jar')<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>% Data Generation for XLSX<br>% Define an xls name<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">fileName</span> = <span class="string">'test_xlwrite.xlsx'</span>;</div><div class="line"><span class="attr">sheetName</span> = <span class="string">'this_is_sheetname'</span>;</div><div class="line"><span class="attr">startRange</span> = <span class="string">'B3'</span>;</div></pre></td></tr></table></figure></p>
<p>% Generate some data<br><figure class="highlight sml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">xlsData = &#123;<span class="symbol">'A</span> <span class="type">Number'</span> <span class="symbol">'Boolean</span> <span class="type">Data'</span> <span class="symbol">'Empty</span> <span class="type">Cells'</span> <span class="symbol">'Strings'</span>;...</div><div class="line"><span class="number">1</span> <span class="literal">true</span> <span class="literal">[]</span> <span class="symbol">'String</span> <span class="type">Text'</span>;...</div><div class="line"><span class="number">5</span> <span class="literal">false</span> <span class="literal">[]</span> <span class="symbol">'Another</span> very descriptive text';...</div><div class="line">-<span class="number">6.26</span> <span class="literal">false</span> <span class="symbol">'This</span> should have been an empty cell but <span class="type">I</span> made an error' <span class="symbol">'This</span> is text';...</div><div class="line"><span class="number">1e8</span> <span class="literal">true</span> <span class="literal">[]</span> <span class="symbol">'Last</span> cell <span class="keyword">with</span> text';...</div><div class="line"><span class="number">1e3</span> <span class="literal">false</span> <span class="type">NaN</span> <span class="type">NaN</span>;...</div><div class="line"><span class="number">1e2</span> <span class="literal">true</span> <span class="literal">[]</span> <span class="symbol">'test'</span>&#125;</div></pre></td></tr></table></figure></p>
<p>% Generate XLSX file<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xlwrite(<span class="name">fileName</span>, xlsData, sheetName, startRange)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<h2 id="I-can’t-open-Matlab-2015a-after-I-upgrade-Ubuntu-14-10-to-15-04"><a href="#I-can’t-open-Matlab-2015a-after-I-upgrade-Ubuntu-14-10-to-15-04" class="headerlink" title="I can’t open Matlab 2015a after I upgrade Ubuntu 14.10 to 15.04."></a>I can’t open Matlab 2015a after I upgrade Ubuntu 14.10 to 15.04.</h2><p>Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar</p>
<p>This package is responsible for application menu support for Java swing applications, and seems to be the cause for the segfault. Removing it worked for me:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-<span class="built_in">get</span> <span class="built_in">remove</span> jayatana</div></pre></td></tr></table></figure></p>
<p>If you just want to remove the message you can just edit your $HOME/.bashrc (if using bash) or $HOME/.profile and unset the variable with: unset JAVA_TOOL_OPTIONS<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ echo <span class="string">'unset JAVA_TOOL_OPTIONS'</span> &gt;&gt; ~/<span class="selector-class">.bashrc</span></div><div class="line">$ echo <span class="string">'unset JAVA_TOOL_OPTIONS'</span> &gt;&gt; ~/<span class="selector-class">.profile</span></div><div class="line">$ source ~/<span class="selector-class">.bashrc</span></div><div class="line">$ source ~/.profile</div></pre></td></tr></table></figure></p>
<h2 id="MATLAB-parallel-error"><a href="#MATLAB-parallel-error" class="headerlink" title="MATLAB parallel error"></a>MATLAB parallel error</h2><p>  Java exception occurred:<br>  java.net.UnknownHostException: <strong><strong>**</strong></strong>: nodename nor servname provided, or not known<br>    at java.net.InetAddress.getLocalHost(InetAddress.java:1473)</p>
<p>When you type !hostname in the command window In Matlab, it returns a string. In /etc/hosts (OS X/Linux), you should add: 127.0.0.1 str (str being whatever string !hostname returned). Is this what you tried? I had the same issue and it worked for me. (in my case I added 127.0.0.1 server because my hostname is server) –  Franck Dernoncourt Feb 2 at 4:17 </p>
<h2 id="matlab-read-CMYK-image-error"><a href="#matlab-read-CMYK-image-error" class="headerlink" title="matlab read CMYK image error"></a>matlab read CMYK image error</h2><figure class="highlight mel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">image_path=<span class="string">'./Desktop/n01739381_1309.JPEG'</span>;</div><div class="line">image_name=<span class="string">'n01739381_1309.JPEG'</span></div><div class="line"><span class="keyword">if</span> <span class="keyword">strcmp</span>(info(<span class="number">1</span>,<span class="number">1</span>).ColorType,<span class="string">'CMYK'</span>)</div><div class="line">    <span class="keyword">system</span>([<span class="string">'convert '</span>, image_path, <span class="string">' -colorspace RGB'</span>, <span class="string">' ./tmp/'</span>,image_name]);</div><div class="line">    <span class="keyword">image</span>=imread([<span class="string">'./tmp/'</span>,image_name]);</div><div class="line">end</div></pre></td></tr></table></figure>
<h2 id="Vlfeat-Error-in-vl-demo-covdet-line-15"><a href="#Vlfeat-Error-in-vl-demo-covdet-line-15" class="headerlink" title="Vlfeat Error in vl_demo_covdet (line 15)"></a>Vlfeat Error in vl_demo_covdet (line 15)</h2><p>Invalid MEX-file ‘/home/gaobb/mywork/toolbox/vlfeat-0.9.19/toolbox/mex/mexa64/vl_covdet.mexa64’:<br>/home/gaobb/mywork/toolbox/vlfeat-0.9.19/toolbox/mex/mexa64/libvl.so: undefined symbol: GOMP_parallel<br>Error in vl_demo_covdet (line 15)<br>frames = vl_covdet(imgs, ‘verbose’) ;</p>
<p>Solution<br>open the /vlfeat/makefile and edit:<br>Makefile DISABLE_OPENMP=yes</p>
<h2 id="Vlfeat-Error-libvl-so-cannot-open-shared-object-file-No-such-file-or-directory"><a href="#Vlfeat-Error-libvl-so-cannot-open-shared-object-file-No-such-file-or-directory" class="headerlink" title="Vlfeat Error libvl.so: cannot open shared object file: No such file or directory"></a>Vlfeat Error libvl.so: cannot open shared object file: No such file or directory</h2><p>Invalid MEX-file ‘/home/gaobb/. mcrCache8.3/main_C0/home/gaobb/mywork/<br>toolbox/vlfeat- 0.9.20/toolbox/mex/mexa64/vl_fisher.mexa64’: libvl.so: cannot open shared object file: No such file or directory</p>
<p>Solution<br>Open the /etc/ld.so.conf as sudo and add a new line with the library directory. In this case, we add /home/gaobb/mywork/toolbox/vlfeat-0.9.20/toolbox/mex/mexa64<br>Rerun ldconfig to rebuild the cache:<br>sudo ldconfig<br>Check if the shared library cache now includes the shared libraries from the new directory:<br>ldconfig -p</p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/17/Matlab-常见问题整理/">http://gaobb.github.io/2015/06/17/Matlab-常见问题整理/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Matlab and GPU]]></title>
      <url>http://gaobb.github.io/2015/06/12/Matlab%20and%20GPU/</url>
      <content type="html"><![CDATA[<p>本文主要总结 MATLAB 下如何指定GPU计算资源.<br><a id="more"></a> </p>
<h2 id="查看服务器GPU计算资源"><a href="#查看服务器GPU计算资源" class="headerlink" title="查看服务器GPU计算资源"></a>查看服务器GPU计算资源</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>nvidia-smi</div></pre></td></tr></table></figure>
<p><img src="../../../../image/nvidia-smi.png" alt=""></p>
<p>上图可以知道，该台服务器共有4 块GPU（0 1 2 3），其中2和3 被进程PID：14138和16433使用.<br>如果自己的应用需要很大显存，可以指定GPU，例如这里至少可以使用 0 和 1. 在matlab 环境下，可以使用 gpuDevice 和 reset.<br><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">matlab  <span class="comment">%启动matlab</span></div><div class="line">gpuDevice</div></pre></td></tr></table></figure></p>
<p><img src="../../../../image/gpudevice.png" alt=""><br>默认为第0块GPU. 需要指出的是matlab 从1开始计数，而系统则是从0开始计数. 因此在matlab 下4块显卡的编号从（0 1 2 3）变为（1 2 3 4）.</p>
<p>如果我们想用第1块显卡，则对应于matlab下面的第2块.可以使用reset 设定.<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span> g=gpuDevice(<span class="number">2</span>)</div><div class="line"><span class="symbol">$</span> reset(g)</div><div class="line"><span class="symbol">$</span> <span class="keyword">system</span>(<span class="string">'nvidia-smi'</span>)  %调用系统命令查看</div></pre></td></tr></table></figure></p>
<p><img src="../../../../image/resetgpu.png" alt=""><br>可以看到第1块显卡被启动，也可以使用matlab 提供的函数gpuDevice 查看.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpuDevice</div></pre></td></tr></table></figure>
<p><img src="../../../../image/viewgpudevice.png" alt=""><br>可以看到当前的GPU的编号为2,对应于系统的1.</p>
<h2 id="GPU-与-CPU-之间的数据交换"><a href="#GPU-与-CPU-之间的数据交换" class="headerlink" title="GPU 与 CPU 之间的数据交换"></a>GPU 与 CPU 之间的数据交换</h2><p>gpuArray<br>MATLAB中的gpuArray表示存储在GPU上的数据。使用gpuArray函数可以将数据从MATLAB工作空间传送到GPU。例如：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">A</span> = data(<span class="number">10</span>);</div><div class="line"><span class="attr">G</span> = gpuArray(A);</div></pre></td></tr></table></figure></p>
<p>gather<br>执行以上语句后，G 就是一个MATLAB GPUArray对象了。<br>当GPU运行完程序后，可以通过gather函数将数据从GPU取回到MATLAB工作空间。<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">D</span> = gather(G);</div></pre></td></tr></table></figure></p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/12/Matlab">http://gaobb.github.io/2015/06/12/Matlab</a> and GPU/</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux系统常见问题整理]]></title>
      <url>http://gaobb.github.io/2015/06/07/linux%E7%B3%BB%E7%BB%9F%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<p>本文总结一些在Linux 系统下常见的一些问题以及解决方案.<br><a id="more"></a> </p>
<h2 id="install-redhat6-5"><a href="#install-redhat6-5" class="headerlink" title="install redhat6.5"></a>install redhat6.5</h2><p>  close firewall: service iptables stop<br>  start firewall: service iptables start<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$  service iptables <span class="built_in">stop</span>  <span class="comment">/* 关闭防火墙 */</span> </div><div class="line">$  service iptables <span class="built_in">start</span> <span class="comment">/* 开启防火墙 */</span> </div><div class="line">$  chkconfig iptables off <span class="comment">/* 默认关闭防火墙 */</span></div><div class="line">  %<span class="built_in">start</span> network: service network restart</div><div class="line">$  <span class="built_in">start</span> vncserver: service vncserver <span class="keyword">on</span></div><div class="line">$  chkconfig vncserver <span class="keyword">on</span></div></pre></td></tr></table></figure></p>
<h2 id="mount-disk"><a href="#mount-disk" class="headerlink" title="mount disk"></a>mount disk</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$  mount <span class="meta-keyword">/dev/</span>sdb /home</div><div class="line">$  vim <span class="meta-keyword">/etc/</span>fstab</div><div class="line">  <span class="meta-keyword">/dev/</span>sdb   /home  ext4  defaults <span class="number">0</span> <span class="number">0</span></div><div class="line">$  sudo mount  <span class="comment">//210.28.132.63/data3/USERS/gaobb  /home/gaobb/mywork/SV3   -o username=xxxxxx,password=xxxxxx,rw,dir_mode=0777,file_mode=0777,uid=gaobb,gid=gaobb  /*挂载网络硬盘*/</span></div><div class="line">$  sudo umount   <span class="meta-keyword">/home/</span>gaobb<span class="meta-keyword">/mywork/</span>SV3 <span class="comment">/*卸载挂载*/</span></div></pre></td></tr></table></figure>
<h2 id="VNC-Server-Installation-on-CentOS-6-5"><a href="#VNC-Server-Installation-on-CentOS-6-5" class="headerlink" title="VNC Server Installation on CentOS 6.5"></a>VNC Server Installation on CentOS 6.5</h2><p> <a href="https://www.howtoforge.com/vnc-server-installation-centos-6.5" target="_blank" rel="external">https://www.howtoforge.com/vnc-server-installation-centos-6.5</a><br> I am logged in my system with root, &amp; now I will be installing the VNC-server.<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ yum groupinstall Desktop</div><div class="line">$ yum <span class="keyword">install</span> gnome-core </div><div class="line">$ yum <span class="keyword">install</span> tigervnc-<span class="keyword">server</span></div><div class="line"> %<span class="keyword">Now</span> make the service <span class="keyword">on</span> <span class="keyword">after</span> every reboot</div><div class="line">$ chkconfig vncserver <span class="keyword">on</span></div></pre></td></tr></table></figure></p>
<h2 id="Adding-VNC-user"><a href="#Adding-VNC-user" class="headerlink" title="Adding VNC user"></a>Adding VNC user</h2><p>  In my case I am using user=srijan it will differ in your case. You can use any username for the same.<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span> useradd xxxx</div></pre></td></tr></table></figure></p>
<p>  Now I will assign the vncpassword for the user with the user I just created before as:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span> su - srijan</div><div class="line"><span class="variable">$ </span> vncpasswd</div></pre></td></tr></table></figure></p>
<p>  Now I will restart the VNC server service as root user:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span> service vncserver restart</div></pre></td></tr></table></figure></p>
<h2 id="VNC更改分辨率"><a href="#VNC更改分辨率" class="headerlink" title="VNC更改分辨率"></a>VNC更改分辨率</h2><p>在linux中的VNC会话更改分辨率<br><a href="http://qa.helplib.com/407397" target="_blank" rel="external">http://qa.helplib.com/407397</a><br>Ubuntu 15.10安装VNC灰屏的问题<br><a href="http://www.linuxdiyf.com/linux/18535.html" target="_blank" rel="external">http://www.linuxdiyf.com/linux/18535.html</a></p>
<h2 id="libcudart-so-6-5-can-not-open-shared-object-file-No-such-file-or-directory…"><a href="#libcudart-so-6-5-can-not-open-shared-object-file-No-such-file-or-directory…" class="headerlink" title="libcudart.so.6.5: can not open shared object file: No such file or directory…"></a>libcudart.so.6.5: can not open shared object file: No such file or directory…</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/ld<span class="selector-class">.so</span><span class="selector-class">.conf</span><span class="selector-class">.d</span>/mysql-x86-<span class="number">64</span><span class="selector-class">.conf</span></div><div class="line">/usr/local/cuda/lib64</div><div class="line">/usr/......</div><div class="line"></div><div class="line">ldconfig /etc/ld<span class="selector-class">.so</span><span class="selector-class">.cache</span></div></pre></td></tr></table></figure>
<h2 id="vim-etc-init-id-3-initdefault-Full-multiuser-mode"><a href="#vim-etc-init-id-3-initdefault-Full-multiuser-mode" class="headerlink" title="vim /etc/init  id:3:initdefault:    Full multiuser mode"></a>vim /etc/init  id:3:initdefault:    Full multiuser mode</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">reboot</div><div class="line"><span class="keyword">sh</span>  cuda-....</div><div class="line"><span class="keyword">vim</span> /etc/init  id:<span class="number">5</span>:initdefaul<span class="variable">t:</span>     X11</div><div class="line">reboot</div><div class="line">$  cuda example <span class="keyword">make</span> -j8</div></pre></td></tr></table></figure>
<h2 id="anacoda"><a href="#anacoda" class="headerlink" title="anacoda"></a>anacoda</h2><p>  <a href="https://3230d63b5fc54e62148e-c95ac804525aac4b6dba79b00b39d1d3.ssl.cf1.rackcdn.com/Anaconda-2.2.0-Linux-x86_64.sh" target="_blank" rel="external">https://3230d63b5fc54e62148e-c95ac804525aac4b6dba79b00b39d1d3.ssl.cf1.rackcdn.com/Anaconda-2.2.0-Linux-x86_64.sh</a><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">bash</span> <span class="selector-tag">Anaconda-2</span><span class="selector-class">.2</span><span class="selector-class">.0-Linux-x86_64</span><span class="selector-class">.sh</span></div></pre></td></tr></table></figure></p>
<h2 id="opencv"><a href="#opencv" class="headerlink" title="opencv"></a>opencv</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span> sudo ./opencv_latest.sh</div></pre></td></tr></table></figure>
<h2 id="torch-http-torch-ch-docs-getting-started-html"><a href="#torch-http-torch-ch-docs-getting-started-html" class="headerlink" title="torch: http://torch.ch/docs/getting-started.html#_"></a>torch: <a href="http://torch.ch/docs/getting-started.html#_" target="_blank" rel="external">http://torch.ch/docs/getting-started.html#_</a></h2><h2 id="MKL-https-software-intel-com-en-us-intel-education-offerings"><a href="#MKL-https-software-intel-com-en-us-intel-education-offerings" class="headerlink" title="MKL  https://software.intel.com/en-us/intel-education-offerings"></a>MKL  <a href="https://software.intel.com/en-us/intel-education-offerings" target="_blank" rel="external">https://software.intel.com/en-us/intel-education-offerings</a></h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span>  tar -zxvf parallel_studio_xe_2015</div><div class="line"><span class="symbol">$</span>  chmod a+x parallel_studio_xe_2015 -R</div><div class="line"><span class="symbol">$</span>  cd ~/parallel_studio_xe_2015</div><div class="line"><span class="symbol">$</span> sudo ./install_GUI.sh</div><div class="line"><span class="symbol">$</span>  SKCG<span class="number">-37</span>XWFDHH</div></pre></td></tr></table></figure>
<h2 id="清理缓存"><a href="#清理缓存" class="headerlink" title="清理缓存"></a>清理缓存</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>su</div><div class="line"><span class="variable">$ </span>echo <span class="number">3</span> &gt; <span class="regexp">/proc/sys</span><span class="regexp">/vm/drop</span>_caches</div></pre></td></tr></table></figure>
<h2 id="查看，杀死僵尸进程"><a href="#查看，杀死僵尸进程" class="headerlink" title="查看，杀死僵尸进程"></a>查看，杀死僵尸进程</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$   ps -ef | <span class="keyword">grep</span> defunct | <span class="keyword">grep</span> -v <span class="keyword">grep</span></div><div class="line">$   ps -A -o <span class="keyword">stat</span>,ppid,pid,cmd | <span class="keyword">grep</span> -e <span class="string">'^[Zz]'</span> | awk <span class="string">'&#123;print $2&#125;'</span> | xargs <span class="keyword">kill</span> -<span class="number">9</span></div><div class="line">               ps -A -o <span class="keyword">stat</span>,ppid,pid,cmd |<span class="keyword">grep</span> -e <span class="string">"^[Zz]"</span></div></pre></td></tr></table></figure>
<h2 id="升级到Ubuntu-16-04的方法"><a href="#升级到Ubuntu-16-04的方法" class="headerlink" title="升级到Ubuntu 16.04的方法"></a>升级到Ubuntu 16.04的方法</h2><figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$  sudo apt-<span class="built_in">get</span> <span class="keyword">update</span> %先刷新源：</div><div class="line">$  sudo <span class="keyword">update</span>-manager -c -d  %执行更新：</div></pre></td></tr></table></figure>
<h2 id="linux下测试磁盘的读写IO速度"><a href="#linux下测试磁盘的读写IO速度" class="headerlink" title="linux下测试磁盘的读写IO速度"></a>linux下测试磁盘的读写IO速度</h2><p>有时候我们在做维护的时候，总会遇到类似于IO特别高，但不能判定是IO瓶颈还是软件参数设置不当导致热盘的问题.这时候通常希望能知道磁盘的读写速度，来进行下一步的决策.</p>
<p>下面是两种测试方法：<br>(1)使用hdparm命令<br>这是一个是用来获取ATA/IDE硬盘的参数的命令,是由早期Linux IDE驱动的开发和维护人员 Mark Lord开发编写的( hdparm has been written by Mark Lord <a href="&#109;&#97;&#x69;&#x6c;&#116;&#x6f;&#58;&#x6d;&#x6c;&#x6f;&#x72;&#100;&#64;&#112;&#x6f;&#98;&#x6f;&#x78;&#46;&#x63;&#111;&#109;">&#x6d;&#x6c;&#x6f;&#x72;&#100;&#64;&#112;&#x6f;&#98;&#x6f;&#x78;&#46;&#x63;&#111;&#109;</a>, the primary developer and maintainer of the (E)IDE driver for Linux, with suggestions from many netfolk).该命令应该也是仅用于Linux系统,对于UNIX系统，ATA/IDE硬盘用的可能比较少，一般大型的系统都是使用磁盘阵列的.</p>
<p>使用方法很简单</p>
<h1 id="hdparm-Tt-dev-sda"><a href="#hdparm-Tt-dev-sda" class="headerlink" title="hdparm -Tt /dev/sda"></a>hdparm -Tt /dev/sda</h1><p>/dev/sda:<br>Timing cached reads: 6676 MB in 2.00 seconds = 3340.18 MB/sec<br>Timing buffered disk reads: 218 MB in 3.11 seconds = 70.11 MB/sec</p>
<p>可以看到,2秒钟读取了6676MB的缓存,约合3340.18 MB/sec;<br>在3.11秒中读取了218MB磁盘(物理读),读取速度约合70.11 MB/sec</p>
<h2 id="Ubuntu-install-teamviewer"><a href="#Ubuntu-install-teamviewer" class="headerlink" title="Ubuntu install teamviewer"></a>Ubuntu install teamviewer</h2><p>sudo dpkg -i teamviewer_11.0.53191_amd64.deb<br>Selecting previously unselected package teamviewer.<br>(Reading database … 253184 files and directories currently installed.)<br>Preparing to unpack teamviewer_11.0.53191_amd64.deb …<br>Unpacking teamviewer (11.0.53191) …<br>dpkg: dependency problems prevent configuration of teamviewer:<br> teamviewer depends on libc6-i386 (&gt;= 2.4); however:<br>  Package libc6-i386 is not installed.<br> teamviewer depends on lib32asound2; however:<br>  Package lib32asound2 is not installed.<br> teamviewer depends on lib32z1; however:<br>  Package lib32z1 is not installed.<br> teamviewer depends on ia32-libs; however:<br>  Package ia32-libs is not installed.</p>
<p>dpkg: error processing package teamviewer (–install):<br> dependency problems - leaving unconfigured<br>Errors were encountered while processing:<br> teamviewer</p>
<pre><code>dpkg --add-architecture i386
apt-get update
sudo dpkg -i teamviewer_11.0.53191_i386.deb 
sudo apt-get install -f 
</code></pre><h1 id="redhat-replace-centos-source"><a href="#redhat-replace-centos-source" class="headerlink" title="redhat replace centos source"></a>redhat replace centos source</h1><p>1.删除redhat原有的yum<br>rpm -aq|grep yum|xargs rpm -e –nodeps </p>
<p>2.下载yum安装文件<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mirrors.ustc.edu.cn/centos</span><span class="regexp">/6/os</span><span class="regexp">/x86_64/</span>Packages/yum-<span class="number">3.2</span>.<span class="number">29</span>-<span class="number">69</span>.el6.centos.noarch.rpm</div><div class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mirrors.ustc.edu.cn/centos</span><span class="regexp">/6/os</span><span class="regexp">/x86_64/</span>Packages/yum-metadata-parser-<span class="number">1.1</span>.<span class="number">2</span>-<span class="number">16</span>.el6.x86_64.rpm </div><div class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mirrors.ustc.edu.cn/centos</span><span class="regexp">/6/os</span><span class="regexp">/x86_64/</span>Packages/yum-plugin-fastestmirror-<span class="number">1.1</span>.<span class="number">30</span>-<span class="number">30</span>.el6.noarch.rpm</div><div class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mirrors.ustc.edu.cn/centos</span><span class="regexp">/6/os</span><span class="regexp">/x86_64/</span>Packages/python-iniparse-<span class="number">0.3</span>.<span class="number">1</span>-<span class="number">2.1</span>.el6.noarch.rpm</div></pre></td></tr></table></figure></p>
<p>3.进行安装yum<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">python-iniparse-0</span><span class="selector-class">.3</span><span class="selector-class">.1-2</span><span class="selector-class">.1</span><span class="selector-class">.el6</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span> </div><div class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">yum-metadata-parser-1</span><span class="selector-class">.1</span><span class="selector-class">.2-16</span><span class="selector-class">.el6</span><span class="selector-class">.x86_64</span><span class="selector-class">.rpm</span></div><div class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">yum-3</span><span class="selector-class">.2</span><span class="selector-class">.29-69</span><span class="selector-class">.el6</span><span class="selector-class">.centos</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span> <span class="selector-tag">yum-plugin-fastestmirror-1</span><span class="selector-class">.1</span><span class="selector-class">.30-30</span><span class="selector-class">.el6</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span></div></pre></td></tr></table></figure></p>
<p>注意最后两个包必需同时安装，否则会相互依赖 </p>
<p>1<br>down vote<br>I had similar problem, what I did is to manually download the old version python and reinstall it with rpm:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rpm -<span class="keyword">qa</span> | <span class="keyword">grep</span> <span class="keyword">python</span>- | <span class="keyword">grep</span> <span class="number">2.6</span></div><div class="line">sudo rpm -ivh --force ftp://mirror.switch.ch/pool/<span class="number">4</span>/mirror/scientificlinux/<span class="number">6.5</span>/x86_64/updates/fastbugs/<span class="keyword">python</span>-<span class="number">2.6</span>.<span class="number">6</span>-<span class="number">52</span>.el6.x86_64.rpm</div><div class="line">sudo rpm -ivh --force <span class="keyword">python</span>-<span class="number">2.6</span>.<span class="number">6</span>-<span class="number">64</span>.el6.x86_64.rpm</div></pre></td></tr></table></figure></p>
<p>linux平台下要编译安装除gcc和gcc-c++之外，还需要两个开发库：bzip2-devel 和python-devel，因此在安装前应该先保证这两个库已经安装：<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">#yum</span> install gcc gcc-c++ <span class="keyword">bzip2 </span><span class="keyword">bzip2-devel </span><span class="keyword">bzip2-libs </span>python-devel -y</div></pre></td></tr></table></figure></p>
<p>然后是去官网下载源码包，地址<br>下载，解压，按照如下步骤：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#tar</span> xvzf boost_1_50_0<span class="selector-class">.tar</span><span class="selector-class">.gz</span></div></pre></td></tr></table></figure></p>
<p>进入boost_1_50_0目录：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#cd</span> boost_1_50_0</div></pre></td></tr></table></figure></p>
<p>然后是编译安装，boost源码包中有配置脚本，直接用就可以：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#<span class="keyword">sh</span> ./<span class="keyword">bootstrap</span>.<span class="keyword">sh</span></div></pre></td></tr></table></figure></p>
<p>Building Boost.Build engine with toolset gcc… tools/build/v2/engine/bin.linuxx86_64/b2<br>Detecting Python version… 2.6<br>Detecting Python root… /usr<br>Unicode/ICU support for Boost.Regex?… not found.<br>Generating Boost.Build configuration in project-config.jam…</p>
<p>Bootstrapping is done. To build, run:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./b2</div></pre></td></tr></table></figure></p>
<p>To adjust configuration, edit ‘project-config.jam’.<br>Further information:<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- Command line <span class="attribute">help</span>:</div><div class="line">  ./b2 --help</div><div class="line">  </div><div class="line">- Getting started <span class="attribute">guide</span>: </div><div class="line">  <span class="attribute">http</span>:<span class="comment">//www.boost.org/more/getting_started/unix-variants.html</span></div><div class="line">  </div><div class="line">- Boost.Build <span class="attribute">documentation</span>:</div><div class="line">  <span class="attribute">http</span>:<span class="comment">//www.boost.org/boost-build2/doc/html/index.html</span></div></pre></td></tr></table></figure></p>
<p>接下来就是编译，重点关注是否编译成功：</p>
<p>#./b2</p>
<p>然后就是漫长的等待，如果最后出现：<br>The Boost C++ Libraries were successfully built!</p>
<p>The following directory should be added to compiler include paths:</p>
<pre><code>/home/gang/BAK/boost_1_50_0
</code></pre><p>The following directory should be added to linker library paths:</p>
<pre><code>/home/gang/BAK/boost_1_50_0/stage/lib
</code></pre><p>最后，sudo ./b2 install –prefix=/usr/local<br>1、  boost中大部分库是不用编译成动态或者静态链接库。</p>
<p>2、  只有regex,thread等几个库比较麻烦一点.要编译。</p>
<p>3、  如果用gcc编译器-l指定动态链接库的路径,还要指定头文件的路径。</p>
<p>4、  或者链接的boost库放到.c或.cpp之后，否则链接不能通过，编译可以通过。</p>
<p>如下所示：g++ -lz -lpthread hh.c -lboost_filesystem -lboost_thread</p>
<h2 id="安装rar步骤如下："><a href="#安装rar步骤如下：" class="headerlink" title="安装rar步骤如下："></a>安装rar步骤如下：</h2><p>1 下载rar安装包: 下载地址：<a href="http://www.rarsoft.com/download.htm" target="_blank" rel="external">http://www.rarsoft.com/download.htm</a><br>2 安装rar<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> <span class="selector-tag">rarlinux-x64-4</span><span class="selector-class">.2</span><span class="selector-class">.0</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span> #解压<span class="selector-tag">rar</span></div><div class="line"><span class="selector-tag">cd</span> <span class="selector-tag">rar</span> #进入目录安装</div><div class="line"><span class="selector-tag">make</span></div></pre></td></tr></table></figure></p>
<h2 id="git-clone-–recursive-https-github-com-rbgirshick-fast-rcnn-git"><a href="#git-clone-–recursive-https-github-com-rbgirshick-fast-rcnn-git" class="headerlink" title="git clone –recursive https://github.com/rbgirshick/fast-rcnn.git"></a>git clone –recursive <a href="https://github.com/rbgirshick/fast-rcnn.git" target="_blank" rel="external">https://github.com/rbgirshick/fast-rcnn.git</a></h2><p>  error: Failed connect to github  fatal: HTTP request failed</p>
<p>  Solution<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$  git config --global url.<span class="string">"https://"</span><span class="selector-class">.insteadOf</span> git:<span class="comment">//</span></div><div class="line">$  git config --global http<span class="selector-class">.proxy</span> <span class="number">114.212</span>.~~.~~:~~~~~</div></pre></td></tr></table></figure></p>
<h2 id="安装-convert"><a href="#安装-convert" class="headerlink" title="安装 convert"></a>安装 convert</h2><p>sudo apt-get install imagemagick</p>
<h2 id="W-GPG-错误"><a href="#W-GPG-错误" class="headerlink" title="W: GPG 错误"></a>W: GPG 错误</h2><p>W: GPG 错误：<a href="http://archive.ubuntukylin.com:10006" target="_blank" rel="external">http://archive.ubuntukylin.com:10006</a> xenial InRelease: 由于没有公钥，无法验证下列签名： NO_PUBKEY 8D5A09DC9B929006</p>
<p>   sudo apt-key adv –keyserver keyserver.ubuntu.com –recv-keys 8D5A09DC9B929006</p>
<h2 id="Ubuntu-修改代理"><a href="#Ubuntu-修改代理" class="headerlink" title="Ubuntu 修改代理"></a>Ubuntu 修改代理</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo vim  <span class="meta-keyword">/etc/</span>apt/apt.conf</div><div class="line"><span class="symbol">Acquire:</span>:<span class="symbol">http::</span>Proxy <span class="string">"http://114.212.××.××:××××/"</span>;</div><div class="line"><span class="symbol">Acquire:</span>:<span class="symbol">https::</span>Proxy <span class="string">"https://114.212.××.××:××××/"</span>;</div></pre></td></tr></table></figure>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo <span class="keyword">vim</span> /etc/<span class="keyword">profile</span> <span class="built_in">or</span> sudo <span class="keyword">vim</span> ~/.bashrc</div><div class="line">export http_proxy=http://<span class="number">114.212</span>.××.××:××××</div><div class="line">export https_proxy=http<span class="variable">s:</span>//<span class="number">114.212</span>.××.××:××××</div><div class="line"></div><div class="line"><span class="keyword">source</span> /etc/<span class="keyword">profile</span> <span class="built_in">or</span> ~/.bashrc</div></pre></td></tr></table></figure>
<h2 id="安装-epstopdf"><a href="#安装-epstopdf" class="headerlink" title="安装 epstopdf"></a>安装 epstopdf</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> install texlive-<span class="built_in">font</span>-utils</div></pre></td></tr></table></figure>
<h2 id="图像添加水印"><a href="#图像添加水印" class="headerlink" title="图像添加水印"></a>图像添加水印</h2><p>在 Ubuntu 下安装：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-<span class="keyword">get</span> install imagemagick</div></pre></td></tr></table></figure></p>
<p>假设把名为’Email: csgaobb@gmail.com’的水印文字添加在原始图片（8s.png）右下角，且水印的下边缘距原始图片5像素、右边缘距原始图片5像素。使用如下命令即可：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ convert <span class="number">8</span>s.png -gravity southeast -fill orange -pointsize <span class="number">50</span> -draw <span class="string">"text 5,5 'Email: csgaobb@gmail.com'"</span> <span class="number">8</span>s-c.jpg</div></pre></td></tr></table></figure></p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/07/linux系统常见问题整理/">http://gaobb.github.io/2015/06/07/linux系统常见问题整理/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于Non-Maximum Supression]]></title>
      <url>http://gaobb.github.io/2015/06/07/%E5%85%B3%E4%BA%8E-Non-Maximum-Suppression/</url>
      <content type="html"><![CDATA[<p>Non-Maximum Supression 是一种局部最大值搜索算法，在CV的很多任务中都有广泛的应用, 如跟踪、数据挖掘、3D重建、目标识别等。<br>参考：Alexander Neubeck的论文：Efﬁcient Non-Maximum Suppression。<br><a id="more"></a> </p>
<h2 id="1-D-NMS"><a href="#1-D-NMS" class="headerlink" title="1-D NMS"></a>1-D NMS</h2><p>  2n+1邻域: 当前点n+i的2n+1邻域是指是在区间[i,2n+i] 上的2n+1个离散点， 也就是该点和该点左右侧各n个点构成。<br>  给定一个长度为w 的行向量y，NMS 就是以2n+1邻域搜索局部最大值. 下面以一维为例：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">maximumat</span> =<span class="title">nms</span><span class="params">(y,n)</span></span></div><div class="line"><span class="built_in">i</span>=<span class="number">1</span>;</div><div class="line">maximumat=[];</div><div class="line">w=<span class="built_in">length</span>(y);</div><div class="line"></div><div class="line"><span class="keyword">while</span> <span class="number">2</span>*n +<span class="built_in">i</span>&lt;w</div><div class="line">    <span class="keyword">if</span> y(<span class="built_in">i</span>+n)&gt;max(y(n+<span class="built_in">i</span>+<span class="number">1</span>:<span class="number">2</span>*n+<span class="built_in">i</span>))</div><div class="line">        <span class="keyword">if</span> y(<span class="built_in">i</span>+n)&gt;max(y(<span class="built_in">i</span>:n+<span class="built_in">i</span><span class="number">-1</span>))</div><div class="line">            maximumat = [maximumat i+n];</div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">else</span> </div><div class="line">        <span class="built_in">i</span>=<span class="built_in">i</span>+<span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span> <span class="number">2</span>*n +<span class="built_in">i</span>&lt;w &amp;&amp; y(<span class="built_in">i</span>+n)&lt;max(y(n+<span class="built_in">i</span>+<span class="number">1</span>:<span class="built_in">i</span>+<span class="number">2</span>*n))</div><div class="line">            <span class="built_in">i</span>=<span class="built_in">i</span>+<span class="number">1</span>;</div><div class="line">        <span class="keyword">end</span></div><div class="line">        <span class="keyword">if</span> <span class="number">2</span>*n +<span class="built_in">i</span>&lt;w</div><div class="line">            maximumat = [maximumat i+n];</div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">     <span class="built_in">i</span>=<span class="built_in">i</span>+n;</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<p>1、如果一个点比其左右两侧n点的值都大，即得到局部最大值，7-10行。<br>2、在处理过程中，如果未得到局部最大值，可以知道i + n 点比左侧的i到i+n-1点小，那么在下一次处理时，i = i + n，20行。<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">% eg1</div><div class="line">x= <span class="number">50</span>:<span class="number">0.1</span>:<span class="number">200</span>;</div><div class="line">y= <span class="built-in">sin</span>(x)./x;</div><div class="line"></div><div class="line">% eg2</div><div class="line">x=<span class="number">1</span>:<span class="number">200</span>;</div><div class="line">y=rand(<span class="number">1</span>,<span class="number">200</span>);</div><div class="line"></div><div class="line">n=<span class="number">2</span>;</div><div class="line">maximumat =nms(y,n);</div><div class="line">plot(x,y,<span class="string">'-bo'</span>);</div><div class="line">hold on </div><div class="line"><span class="function"><span class="title">plot</span>(<span class="params">x(maximumat</span>)</span>,y(maximumat),<span class="string">'-rs'</span>,  <span class="string">'MarkerFaceColor'</span>,<span class="string">'r'</span>,...</div><div class="line"> <span class="string">'MarkerSize'</span>,<span class="number">8</span>);</div><div class="line">legend(<span class="string">'Original data'</span>,<span class="string">'NMS'</span>);</div><div class="line">title(sprintf(<span class="string">'NMS:%d(2*%d+1)-Neighborhood  '</span>,<span class="number">2</span>*n+<span class="number">1</span>,n));</div></pre></td></tr></table></figure></p>
<p><img src="../../../../image/nms_1.jpg" alt=""><br><img src="../../../../image/nms_2.jpg" alt=""></p>
<h2 id="2-D-NMS"><a href="#2-D-NMS" class="headerlink" title="2-D NMS"></a>2-D NMS</h2><p>  2D邻域为以当前点为中心的(2n+1)×(2n+1)区域。</p>
<h2 id="NMS-在目标检测中应用"><a href="#NMS-在目标检测中应用" class="headerlink" title="NMS 在目标检测中应用"></a>NMS 在目标检测中应用</h2><hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/07/关于-Non-Maximum-Suppression/">http://gaobb.github.io/2015/06/07/关于-Non-Maximum-Suppression/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用hexo搭建博客]]></title>
      <url>http://gaobb.github.io/2015/06/07/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>使用hexo搭建博客<br><a id="more"></a> </p>
<h2 id="配置好Node-js环境"><a href="#配置好Node-js环境" class="headerlink" title="配置好Node.js环境"></a>配置好Node.js环境</h2><p>sudo apt-get install nodejs-legacy</p>
<p>node –version<br>v4.2.4</p>
<h2 id="配置npm工具"><a href="#配置npm工具" class="headerlink" title="配置npm工具"></a>配置npm工具</h2><p>sudo apt-get install npm</p>
<p>npm –version<br>3.5.2</p>
<h2 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h2><p>sudo apt-get install git</p>
<p>git  –version<br>git version 2.7.0.rc3</p>
<h2 id="配置-hexo"><a href="#配置-hexo" class="headerlink" title="配置 hexo"></a>配置 hexo</h2><p>sudo  npm install -g hexo<br>hexo init <folder></folder></p>
<p>hexo server  启动本地服务器<br>hexo deploy<br>hexo genernate</p>
<p><br></p>
<blockquote>
<p>最近访客</p>
<p><div class="ds-recent-visitors" data-num-items="28" data-avatar-size="42" id="ds-recent-visitors"></div><br><br></p>
</blockquote>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/07/使用hexo搭建博客/">http://gaobb.github.io/2015/06/07/使用hexo搭建博客/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[论文笔记R-CNN and Fast-RCNN]]></title>
      <url>http://gaobb.github.io/2015/06/05/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0R-CNN-and-Fast-RCNN/</url>
      <content type="html"><![CDATA[<hr>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/05/论文笔记R-CNN-and-Fast-RCNN/">http://gaobb.github.io/2015/06/05/论文笔记R-CNN-and-Fast-RCNN/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Visualizing what ConvNets learn]]></title>
      <url>http://gaobb.github.io/2015/06/05/Visualizing-what-ConvNets-learn/</url>
      <content type="html"><![CDATA[<p>通过可视化卷积网络的feature map、fiflters来更好理解（解释）CNN<br><a id="more"></a> </p>
<h2 id="可视化神经元的激活值（activation）"><a href="#可视化神经元的激活值（activation）" class="headerlink" title="可视化神经元的激活值（activation）"></a>可视化神经元的激活值（activation）</h2><p><img src="../../../../image/act1.jpeg" alt=""><br><img src="../../../../image/act2.jpeg" alt=""></p>
<h2 id="可视化神经网络每层的权重"><a href="#可视化神经网络每层的权重" class="headerlink" title="可视化神经网络每层的权重"></a>可视化神经网络每层的权重</h2><p><img src="../../../../image/filt1.jpeg" alt=""><br><img src="../../../../image/filt2.jpeg" alt=""></p>
<h2 id="通过pool5-最大激活值追踪输入图像对应的patch"><a href="#通过pool5-最大激活值追踪输入图像对应的patch" class="headerlink" title="通过pool5 最大激活值追踪输入图像对应的patch"></a>通过pool5 最大激活值追踪输入图像对应的patch</h2><p><img src="../../../../image/pool5max.jpeg" alt=""></p>
<h2 id="遮挡输入图像的部分，可视化每个遮挡后对应的输出类别在遮挡位置的置信度"><a href="#遮挡输入图像的部分，可视化每个遮挡后对应的输出类别在遮挡位置的置信度" class="headerlink" title="遮挡输入图像的部分，可视化每个遮挡后对应的输出类别在遮挡位置的置信度"></a>遮挡输入图像的部分，可视化每个遮挡后对应的输出类别在遮挡位置的置信度</h2><p><img src="../../../../image/occlude.jpeg" alt=""></p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/05/Visualizing-what-ConvNets-learn/">http://gaobb.github.io/2015/06/05/Visualizing-what-ConvNets-learn/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Convolutional neural network toolbox]]></title>
      <url>http://gaobb.github.io/2015/06/04/Convolutional%20neural%20network%20toolbox/</url>
      <content type="html"><![CDATA[<p>总结目前流行的CNN 架构，包括Caffe,Matcovernet以及Torch.<br><a id="more"></a> </p>
<h2 id="Caffe"><a href="#Caffe" class="headerlink" title="Caffe"></a><a href="http://caffe.berkeleyvision.org/" target="_blank" rel="external">Caffe</a></h2><p>Caffe is a deep learning framework made with expression, speed, and modularity in mind. It is developed by the Berkeley Vision and Learning Center (BVLC) and by community contributors. Yangqing Jia created the project during his PhD at UC Berkeley. Caffe is released under the BSD 2-Clause license.</p>
<p><img src="../../../../image/caffe.png" alt="caffe"></p>
<p>Why Caffe?</p>
<p>Expressive architecture encourages application and innovation. Models and optimization are defined by configuration without hard-coding. Switch between CPU and GPU by setting a single flag to train on a GPU machine then deploy to commodity clusters or mobile devices.</p>
<p>Extensible code fosters active development. In Caffe’s first year, it has been forked by over 1,000 developers and had many significant changes contributed back. Thanks to these contributors the framework tracks the state-of-the-art in both code and models.</p>
<p>Speed makes Caffe perfect for research experiments and industry deployment. Caffe can process over 60M images per day with a single NVIDIA K40 GPU*. That’s 1 ms/image for inference and 4 ms/image for learning. We believe that Caffe is the fastest convnet implementation available.</p>
<p>Community: Caffe already powers academic research projects, startup prototypes, and even large-scale industrial applications in vision, speech, and multimedia. Join our community of brewers on the caffe-users group and Github.</p>
<h2 id="Matconvernet"><a href="#Matconvernet" class="headerlink" title="Matconvernet"></a><a href="http://www.vlfeat.org/matconvnet/" target="_blank" rel="external">Matconvernet</a></h2><p>MatConvNet is a MATLAB toolbox implementing Convolutional Neural Networks (CNNs) for computer vision applications. It is simple, efficient, and can run and learn state-of-the-art CNNs. Several example CNNs are included to classify and encode images.</p>
<p><img src="../../../../image/matconvernet.png" alt="matcovernet"></p>
<p>MatConvNet was born in the Oxford Visual Geometry Group as both an educatinonal and research platform for fast prototyping in Convolutional Neural Nets. Its main features are:</p>
<p>Flexibility. Neural network layers are implemented in a straightforward manner, often directly in MATLAB code, so that they are easy to modify, extend, or integrate with new ones. Other toolboxes hide the neural network layers behind a wall of compiled code; here the granularity is much finer.</p>
<p>Power. The implementation can run large models such as Krizhevsky et al., including the DeCAF and Caffe variants. Several pre-trained models are provided.</p>
<p>Efficiency. The implementation is quite efficient, supporting both CPU and GPU computation.</p>
<p>This library may be merged in the future with VLFeat library. It uses a very similar style, so if you are familiar with VLFeat, you should be right at home here.</p>
<h2 id="cpu"><a href="#cpu" class="headerlink" title="cpu"></a>cpu</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>make ARCH=glnxa64  MATLABROOT=<span class="regexp">/usr/local</span><span class="regexp">/MATLAB/</span>R2014a</div></pre></td></tr></table></figure>
<h2 id="gpu"><a href="#gpu" class="headerlink" title="gpu"></a>gpu</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ make <span class="attr">ARCH=glnxa64</span>  <span class="attr">MATLABROOT=/usr/local/MATLAB/R2014a</span>  <span class="attr">ENABLE_GPU=yes</span> <span class="attr">CUDAROOT=/usr/local/cuda-7.0</span>  <span class="attr">CUDAMETHOD=nvcc</span></div></pre></td></tr></table></figure>
<h2 id="gpu-cudnn"><a href="#gpu-cudnn" class="headerlink" title="gpu+cudnn"></a>gpu+cudnn</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo cp *.h /usr/local/<span class="keyword">include</span>/</div><div class="line">$ sudo cp <span class="class"><span class="keyword">lib</span>* /<span class="title">usr</span>/<span class="title">local</span>/<span class="title">lib64</span>/</span></div><div class="line">$ sudo ldconfig</div><div class="line">$ make ARCH=glnxa64  MATLABROOT=<span class="regexp">/usr/local</span><span class="regexp">/MATLAB/</span>R2014a  ENABLE_GPU=yes CUDAROOT=<span class="regexp">/usr/local</span><span class="regexp">/cuda-7.0  CUDAMETHOD=nvcc  ENABLE_CUDNN=yes CUDNNROOT=/usr</span><span class="regexp">/local</span></div></pre></td></tr></table></figure>
<h2 id="Torch"><a href="#Torch" class="headerlink" title="Torch"></a><a href="http://torch.ch/" target="_blank" rel="external">Torch</a></h2><p>Torch is a scientific computing framework with wide support for machine learning algorithms. It is easy to use and efficient, thanks to an easy and fast scripting language, LuaJIT, and an underlying C/CUDA implementation.</p>
<p><img src="../../../../image/Torch_2014_logo.png" alt="totch"></p>
<p>Why Torch?</p>
<p>The goal of Torch is to have maximum flexibility and speed in building your scientific algorithms while making the process extremely simple. Torch comes with a large ecosystem of community-driven packages in machine learning, computer vision, signal processing, parallel processing, image, video, audio and networking among others, and builds on top of the Lua community.</p>
<p>At the heart of Torch are the popular neural network and optimization libraries which are simple to use, while having maximum flexibility in implementing complex neural network topologies. You can build arbitrary graphs of neural networks, and parallelize them over CPUs and GPUs in an efficient manner.</p>
<hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/04/Convolutional">http://gaobb.github.io/2015/06/04/Convolutional</a> neural network toolbox/</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[The details  are always in convolutional neural network]]></title>
      <url>http://gaobb.github.io/2015/06/04/The%20details%20are%20always%20in%20convolutional%20neural%20network/</url>
      <content type="html"><![CDATA[<p>阐述CNN 前向传播与反响传播原理，包括卷积、池化、正规化、全连接、损失函数以及反向传播原理.<br><a id="more"></a> </p>
<h2 id="Forward"><a href="#Forward" class="headerlink" title="Forward"></a>Forward</h2><h4 id="convolutional"><a href="#convolutional" class="headerlink" title="convolutional"></a>convolutional</h4><h4 id="pooling"><a href="#pooling" class="headerlink" title="pooling"></a>pooling</h4><h4 id="normalization"><a href="#normalization" class="headerlink" title="normalization"></a>normalization</h4><h4 id="fully-connected"><a href="#fully-connected" class="headerlink" title="fully connected"></a>fully connected</h4><h4 id="loss-function"><a href="#loss-function" class="headerlink" title="loss function"></a>loss function</h4><hr>
<h2 id="Backpropagation"><a href="#Backpropagation" class="headerlink" title="Backpropagation"></a>Backpropagation</h2><hr>
<p><img src="/images/cc-by.svg" alt="">本作品采用<a href="http://creativecommons.org/licenses/by/2.5/cn/" target="_blank" rel="external">知识共享署名 2.5 中国大陆许可协议</a>进行许可，欢迎转载，但转载请注明来自 <a href="http://gaobb.github.io/">Sunshine</a> 并保持转载后文章内容的完整。本人保留所有版权相关权利。</p>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/04/The">http://gaobb.github.io/2015/06/04/The</a> details are always in convolutional neural network/</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redhat6.5 安装caffe指南]]></title>
      <url>http://gaobb.github.io/2015/06/04/Redhat6-5-%E5%AE%89%E8%A3%85caffe%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<hr>
<p>本文链接：<a href="http://gaobb.github.io/2015/06/04/Redhat6-5-安装caffe指南/">http://gaobb.github.io/2015/06/04/Redhat6-5-安装caffe指南/</a></p>
]]></content>
    </entry>
    
  
  
</search>
